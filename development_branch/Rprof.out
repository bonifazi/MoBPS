sample.interval=20000
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"decodeGeno" "miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"calculate.bv" "breeding.diploid" 
"$" "which" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"decodeGeno" "miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"which" "breeding.diploid" 
"$" "calculate.bv" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"breeding.diploid" 
"breeding.diploid" 
"calculate.bv" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"decodeGeno" "miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"getClassDef" "is" "decodeGeno" "miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"decodeGeno" "miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"breeding.diploid" 
"$" "breeding.intern" "breeding.diploid" 
"$<-" "breeding.diploid" 
"pb$up" "utils::setTxtProgressBar" "breeding.diploid" 
"sample.int" "sample" "breeding.diploid" 
"sort" "breeding.intern" "breeding.diploid" 
"$" "mean" "breeding.diploid" 
"stats::runif" "breeding.intern" "breeding.diploid" 
"breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"unique" "diff" "breeding.intern" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"unique.default" "unique" "sort" "breeding.intern" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"as.numeric" "as.numeric" "breeding.diploid" 
"cat" "pb$up" "utils::setTxtProgressBar" "breeding.diploid" 
"breeding.diploid" 
"breeding.diploid" 
"$" "breeding.diploid" 
"cat" "pb$up" "utils::setTxtProgressBar" "breeding.diploid" 
"unique" "breeding.intern" "breeding.diploid" 
"breeding.diploid" 
"match.arg" "sort.int" "sort.default" "sort" "breeding.intern" "breeding.diploid" 
"cat" "pb$up" "utils::setTxtProgressBar" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"length" "breeding.diploid" 
"diff.default" "diff" "breeding.intern" "breeding.diploid" 
"paste" "cat" "pb$up" "utils::setTxtProgressBar" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"mean" "breeding.diploid" 
"unique" "sort" "breeding.intern" "breeding.diploid" 
"diff" "breeding.intern" "breeding.diploid" 
"$" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"getExportedValue" "::" "breeding.intern" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"$" "breeding.diploid" 
"asNamespace" "getExportedValue" "::" "breeding.intern" "breeding.diploid" 
"eval" "match.arg" "sort.int" "sort.default" "sort" "breeding.intern" "breeding.diploid" 
"formals" "match.arg" "sort.int" "sort.default" "sort" "breeding.intern" "breeding.diploid" 
"unique.default" "unique" "breeding.intern" "breeding.diploid" 
"sort" "breeding.intern" "breeding.diploid" 
"getNamespace" "asNamespace" "getExportedValue" "::" "breeding.intern" "breeding.diploid" 
"formals" "match.arg" "sort.int" "sort.default" "sort" "breeding.intern" "breeding.diploid" 
"breeding.diploid" 
"decodeGeno" "miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"unique" "breeding.intern" "breeding.diploid" 
"breeding.intern" "breeding.diploid" 
"miraculix::computeSNPS" "calculate.bv" "breeding.diploid" 
"unique.default" "unique" "breeding.intern" "breeding.diploid" 
"breeding.diploid" 
"$" "calculate.bv" "breeding.diploid" 
".makeSortEnum" ".doSortWrap" "sort.int" "sort.default" "sort" "breeding.intern" "breeding.diploid" 
"any" "order" "sort.int" "sort.default" "sort" "breeding.intern" "breeding.diploid" 
"$<-" "breeding.diploid" 
"unique" "breeding.intern" "breeding.diploid" 
"match.arg" "sort.int" "sort.default" "sort" "breeding.intern" "breeding.diploid" 
