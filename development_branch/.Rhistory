creating.type = 6,
store.breeding.totals = TRUE,
display.progress=progress.bars,
share.genotyped = share.genotyped,
repeat.mating = nodes[[groupnr]]$repeat_mating,
max.offspring = nodes[[groupnr]]$max_offspring,
verbose=verbose)
} else if(nodes[[groupnr]]$'Breeding Type'=="Combine"){
selfing.sex <- (as.numeric(selection.size[2])>0)- 0.5 * as.numeric((selection.size[1]>0)*(selection.size[2]>0))
if(FALSE){
stop("Only one cohort to select from allowed in selection - check for error")
} else{
add.observation <- pheno_index[which(pheno_index_name==nodes[[groupnr]]$'Phenotyping Class'),] -
pheno_index[which(pheno_index_name==nodes[[which(ids==involved_cohorts[1])]]$'Phenotyping Class'),]
add.observation[add.observation<0] <- 0
if(verbose) cat(paste0("Newly added phenotypes for combine note derived based on ", involved_cohorts[1],"\n"))
}
population <- breeding.diploid(population, breeding.size=breeding.size,
selection.size= breeding.size,
copy.individual = TRUE,
added.genotyped = nodes[[groupnr]]$`Proportion of added genotypes`,
max.offspring = c(1,1),
new.bv.child="addobs",
selection.m = "random",
selfing.mating=TRUE,
selfing.sex=selfing.sex,
add.gen = generation,
selection.m.cohorts = cohorts.m,
selection.f.cohorts = cohorts.f,
n.observation = add.observation,
new.class = new_mig[sex],
name.cohort = nodes[[groupnr]]$id,
time.point = time.point,
creating.type = 7,
store.breeding.totals = TRUE,
display.progress=progress.bars,
share.genotyped = share.genotyped,
verbose=verbose)
}
position[groupnr,] <- c(generation, sex, new_mig[sex], sum(breeding.size))
new_mig[sex] <- new_mig[sex] + 1
if(phenotype_groups[groupnr]==0){
tested <- which(duplicated(c(nodes[[groupnr]]$origin, ids))[-(1:length(nodes[[groupnr]]$origin))])
n_tester_generated[tested] <- n_tester_generated[tested] + 1
}
}
}
if(generation != (length(generation_group)+2)){
if(verbose) cat("Generated groups:")
if(verbose) cat(generation_group[[generation-1]])
if(verbose) cat("\n")
alive_cohorts <- c(alive_cohorts, generation_group[[generation-1]])
new_cohorts <- population$info$cohorts[(nrow(population$info$cohorts)-length(generation_group[[generation-1]])+1):nrow(population$info$cohorts),,drop=FALSE]
new_numbers <- as.numeric(new_cohorts[,3])
new_numbers[new_numbers==0] <- as.numeric(new_cohorts[new_numbers==0,4])
alive_numbers <- c(alive_numbers, new_numbers)
}
#      death_to <- rbind(death_to, matrix(0, nrow=length(generation_group[[generation-1]]), ncol=nrow(culling_reason)))
from <- if(generation==2){0} else{generation_times[generation-2]}
if(generation != (length(generation_group)+2)){
to <- generation_times[generation-1]
} else{
to <- Inf
}
if(verbose) cat(paste0("Start culling modul for time span ", from ," to ", to,".\n"))
for(cohort_index in alive_cohorts[alive_numbers>0]){
age_start <- from - as.numeric(population$info$cohorts[cohort_index,8])
age_end <- to - as.numeric(population$info$cohorts[cohort_index,8])
sex <- if(population$info$cohorts[cohort_index,4]=="0"){"Male"} else{"Female"}
# Time - period, sex
active_culling <- as.numeric(culling_reason[,2]) > age_start & as.numeric(culling_reason[,2]) <= age_end & (culling_reason[,3] == sex | culling_reason[,3]=="Both")
active_cohort <- which(population$info$cohorts[,1]==cohort_index)
for(culling_index in which(active_culling)){
population <- breeding.diploid(population,
culling.cohort = cohort_index,
culling.time = as.numeric(culling_reason[culling_index,2]),
culling.name = culling_reason[culling_index,1],
culling.bv1 = as.numeric(culling_reason[culling_index,6]),
culling.bv2 = as.numeric(culling_reason[culling_index,8]),
culling.share1 = as.numeric(culling_reason[culling_index,5]),
culling.share2 = as.numeric(culling_reason[culling_index,7]),
culling.index = selection_index[which(selection_index_name==culling_reason[culling_index,4]),],
verbose=verbose
)
if(length(population$info$culling.stats)>=active_cohort){
new_death <- as.numeric(population$info$culling.stats[[active_cohort]][population$info$culling.stats[[active_cohort]][,1]==culling_reason[culling_index,1],2])
} else{
new_death <- 0
}
if(length(new_death)>0){
alive_numbers[active_cohort] <- alive_numbers[active_cohort] - new_death
}
}
if(alive_numbers[active_cohort]==0){
if(verbose) cat(paste0("All individuals in cohort ", cohort_index, " are death.\n"))
if(verbose) cat("Reason for death:\n")
for(index in 1:nrow(population$info$culling.stats[[active_cohort]])){
if(verbose) cat(population$info$culling.stats[[active_cohort]][index,])
if(verbose) cat("\n")
}
}
}
}
}
female_side <- c("Herdbuchkuehe", paste0("Herdbuchkuehe_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bv(population, cohorts = female_side[index]))
}
plot(bv[1,], type="l")
female_side <- c("Bullenmuetter", paste0("Bullenmuetter_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bv(population, cohorts = female_side[index]))
}
plot(bv[1,], type="l")
female_side <- c("Herdbuchkuehe", paste0("Herdbuchkuehe_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bv(population, cohorts = female_side[index]))
}
plot(bv[1,], type="l")
female_side <- c("Bullenmuetter", paste0("Bullenmuetter_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bv(population, cohorts = female_side[index]))
}
lines(bv[1,], type="l")
analyze.bv(population, cohort="Herdbuchkuehe_1")
analyze.bv(population, cohort="Herdbuchkuehe_2")
analyze.bv(population, cohort="Herdbuchkuehe_3")
analyze.bv(population, cohort="Herdbuchkuehe_4")
female_side <- c("Herdbuchkuehe", paste0("Herdbuchkuehe_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
plot(bv[1,], type="l")
female_side <- c("Bullenmuetter", paste0("Bullenmuetter_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
lines(bv[1,], type="l")
bv
female_side <- c("Herdbuchkuehe", paste0("Herdbuchkuehe_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
plot(bv[1,], type="l")
female_side <- c("Bullenmuetter", paste0("Bullenmuetter_", 1:10))
female_side <- c("Bullenkalb", paste0("Bullenkalb_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
plot(bv[1,], type="l")
female_side <- c("Testbulle", paste0("Testbulle_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
lines(bv[1,], type="l")
female_side <- c("Bullenkalb", paste0("Bullenkalb_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
plot(bv[1,], type="l")
female_side <- c("Testbulle", paste0("Testbulle_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
lines(bv[1,], type="l")
female_side <- c("Vererbergesamt", paste0("Vererber_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
lines(bv[1,], type="l")
female_side <- c("Bullenkalb", paste0("Bullenkalb_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
plot(bv[7,], type="l")
female_side <- c("Testbulle", paste0("Testbulle_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
lines(bv[7,], type="l")
female_side <- c("Vererbergesamt", paste0("Vererber_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
lines(bv[7,], type="l")
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
bv
female_side <- c("Bullenkalb", paste0("Bullenkalb_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- rowMeans(get.bve(population, cohorts = female_side[index]))
}
plot(bv[7,], type="l")
bv
female_side <- c("Bullenkalb", paste0("Bullenkalb_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bve(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Testbulle", paste0("Testbulle_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bve(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
lines(bv[7,], type="l")
bv
plot(bv[7,], type="l")
plot(bv[7,], type="l")
plot(bv[7,], type="l")
female_side <- c("Vererbergesamt", paste0("Vererber_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bve(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Faersen Aufzucht", paste0("Bullenkalb_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Vererbergesamt", paste0("Vererber_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Testbulle", paste0("Testbulle_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Vererbergesamt", paste0("Vererber_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
female_side <- c("Testbulle", paste0("Testbulle_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
bv
female_side <- c("Bullenkalb", paste0("Bullenkalb_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Herdbuchkuehe", paste0("Herdbuchkuehe_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Bullenmuetter", paste0("Bullenmuetter_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Herdbuchkuehe", paste0("Herdbuchkuehe_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
female_side <- c("Bullenmuetter", paste0("Bullenmuetter_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
lines(bv[7,], type="l")
unlist(generation_group)
which(unlist(generation_group)=="KueheMilchProduktion_10"
)
which(unlist(generation_group)=="KueheMilchproduktion_10")
which(unlist(generation_group)=="Bullenmuetter_10")
female_side <- c("Herdbuchkuehe", paste0("Herdbuchkuehe_", 1:10))
bv <- matrix(0, nrow=7,ncol=11)
for(index in 1:11){
bv[,index] <- sum(rowMeans(get.bv(population, cohorts = female_side[index])) *c(45,20,15,77,10,3,250) )
}
plot(bv[7,], type="l")
plot(bv[7,]/min(bv), type="l")
plot(bv[7,]/min(bv)*100, type="l")
plot(bv[7,]/min(bv)*100, type="l", ylab="genomic value", xlab="generation", main="Genomic value for cohort Herdbuchkuehe")
gain1f <- NULL
hetero1f <- NULL
hetero2f <- NULL
acc1f <- NULL
acc2f <- NULL
acc3f <- NULL
table1f <- NULL
table2f <- NULL
for(index in 1:50){
load(paste0("C:/Users/pook/Desktop/MazeCycle/base_results",index,".RData"))
gain1f <- cbind(gain1f, gain1)
hetero1f <- cbind(hetero1f, hetero1)
hetero2f <- cbind(hetero2f, hetero2)
acc1f <- cbind(acc1f, acc1)
acc2f <- cbind(acc2f, acc2)
acc3f <- cbind(acc3f, acc3)
table1f <- cbind(table1f, c(table1, rep(0,10-length(table1))))
table2f <- cbind(table2f, c(table2, rep(0,10-length(table2))))
}
rowMeans(gain1f)
rowMeans(hetero1f)
rowMeans(hetero2f)
rowMeans(acc1f)
rowMeans(acc2f)
rowMeans(acc3f)
mean(colSums(table1f>0))
table(colSums(table1f>0))
mean((colSums(table2f>0)))
table(colSums(table2f>0))
gain1f_2 <- NULL
hetero1f_2 <- NULL
hetero2f_2 <- NULL
acc1f_2 <- NULL
acc2f_2 <- NULL
acc3f_2 <- NULL
table1f_2 <- NULL
table2f_2 <- NULL
for(index in 1:50){
load(paste0("C:/Users/pook/Desktop/MazeCycle/max7_results",index,".RData"))
gain1f_2 <- cbind(gain1f_2, gain1)
hetero1f_2 <- cbind(hetero1f_2, hetero1)
hetero2f_2 <- cbind(hetero2f_2, hetero2)
acc1f_2 <- cbind(acc1f_2, acc1)
acc2f_2 <- cbind(acc2f_2, acc2)
acc3f_2 <- cbind(acc3f_2, acc3)
table1f_2 <- cbind(table1f_2, c(table1, rep(0,10-length(table1))))
table2f_2 <- cbind(table2f_2, c(table2, rep(0,10-length(table2))))
}
rowMeans(gain1f_2)
rowMeans(hetero1f_2)
rowMeans(hetero2f_2)
rowMeans(acc1f_2)
gain1
gain1f_2
rowMeans(gain1f_2)
gain1
rowMeans(gain1f_2)
rowMeans(hetero1f_2)
rowMeans(hetero2f_2)
rowMeans(gain1f_2)
rowMeans(gain1f)
rowMeans(hetero1f_2)
rowMeans(hetero2f_2)
rowMeans(acc1f_2)
rowMeans(acc2f_2)
rowMeans(acc3f_2)
mean(colSums(table1f_2>0))
table(colSums(table1f_2>0))
mean((colSums(table2f_2>0)))
load("C:/Users/pook/Desktop/MazeCycle/base_sim1.RData")
library(MoBPS)
kinship.emp(population = population, gen=14124)
population$info$size
kinship.emp(population = population, gen=5)
kinship.emp.fast(population = population, gen=5)
kinship.emp.fast(population = population, gen=5)
kinship.emp.fast(population = population, gen=5)
kinship.emp.fast(population = population, gen=5)
test1 <- NULL
test2 <- NULL
for(index in 1:10){
print(index)
load(paste0("C:/Users/pook/Desktop/MazeCycle/base_sim",index,".RData"))
test1 <- rbind(test1, kinship.emp.fast(population, gen=5))
load(paste0("C:/Users/pook/Desktop/MazeCycle/max7_sim",index,".RData"))
test2 <- rbind(test2, kinship.emp.fast(population, gen=5))
}
test1 <- rbind(test1, kinship.emp.fast(population, gen=5))
test1 <- NULL
test2 <- NULL
for(index in 1:10){
print(index)
load(paste0("C:/Users/pook/Desktop/MazeCycle/base_sim",index,".RData"))
test1 <- rbind(test1, kinship.emp.fast(population=population, gen=5))
load(paste0("C:/Users/pook/Desktop/MazeCycle/max7_sim",index,".RData"))
test2 <- rbind(test2, kinship.emp.fast(population=population, gen=5))
}
test1
test2
colMeans(test2)
colMeans(test1)
test1 <- NULL
test2 <- NULL
for(index in 1:50){
print(index)
load(paste0("C:/Users/pook/Desktop/MazeCycle/base_sim",index,".RData"))
test1 <- rbind(test1, kinship.emp.fast(population=population, gen=5, ibd.obs = 250))
load(paste0("C:/Users/pook/Desktop/MazeCycle/max7_sim",index,".RData"))
test2 <- rbind(test2, kinship.emp.fast(population=population, gen=5, ibd.obs = 250))
}
colSums(test1)
colSums(test2)
test1
colMeans(test1
)
colMeans(test2
)
13.3*2
127*2
113.3*2
rowMeans(gain1f)
rowMeans(gain1f_2)
rowMeans(gain1f)/45
rowMeans(gain1f_2)/45
0293/319
227/254
54.448/55.92
5192/5817
293/319
757/856
library(MoBPS)
geno <- NULL
nsnp <- NULL
sommer <- TRUE
setwd("C:/Users/pook/Desktop/")
sommer <- TRUE
for(chromo in 1:10){
print(chromo)
load(paste0("Genetic_Datasets/Batch3_KEPE/PE_DH_chromo",chromo,".RData"))
geno <- rbind(geno, data[(1:(nrow(data)/10)) * 10,])
nsnp <- c(nsnp, floor(nrow(data)/10))
}
geno2 <- geno[,sort(rep(1:402,2))]
cor <- matrix(c(1, 0.96, 0.54,0.96,1,0.65,0.54,0.65,1), nrow=3)
population <- creating.diploid(dataset = geno2, nsnp = nsnp, chromosome.length = 1.2, sex.quota = 0, name.cohort = "DH-Founder",
n.additive = c(1000,1000,1000), shuffle.traits = TRUE, shuffle.cor = cor)
# Generation of Phenotypes
population <- breeding.diploid(population, new.bv.observation = "all", heritability = c(0.3,0.4,0.7))
# Generation of C1F1
population <- breeding.diploid(population, bve=TRUE, sommer.bve = sommer,selection.size = c(10,0), breeding.all.combination=TRUE,
breeding.sex=0, name.cohort = "C1F1", selection.m = "function")
# Generation of C1F2
population <- breeding.diploid(population, selection.size=c(45,0), breeding.size = c(1035,0),
repeat.mating = 23, max.offspring = 1, selfing.mating = TRUE, selfing.sex = 0,
selection.m.cohorts = "C1F1", name.cohort = "C1F2", ogc=TRUE)
# Breeding value estimation for C1F2
population <- breeding.diploid(population, bve=TRUE, bve.cohorts = c("C1F2", "DH-Founder"),
bve.insert.cohorts = "C1F2", sommer.bve=sommer)
# Manually derive plants based on index for C1F2
bves <- get.bve(population, cohorts = "C1F2")
bves[3,] <- -abs(bves[3,] - mean(bves[3,]))
selection_index <- colSums(bves)
picks <- sort(selection_index, index.return=TRUE, decreasing = TRUE)$ix[1:30]
picks <- sample(picks, 30)
fixed.breeding1 <- cbind(3,1,picks[1:15], 3,1,picks[16:30],0)
#Generation of C2F2
population <- breeding.diploid(population, breeding.size=c(1035,0),
fixed.breeding = fixed.breeding1, repeat.mating = 69,
name.cohort="C2F2")
# Breeding value estimation for C2F2
population <- breeding.diploid(population, bve=TRUE, bve.cohorts = c("C2F2", "DH-Founder"),
bve.insert.cohorts = "C2F2", sommer.bve=sommer)
# Manually derive plants based on index for C2F2
bves <- get.bve(population, cohorts = "C2F2")
bves[3,] <- -abs(bves[3,] - mean(bves[3,]))
selection_index <- colSums(bves)
picks <- sort(selection_index, index.return=TRUE, decreasing = TRUE)$ix[1:30]
picks <- sample(picks, 30)
fixed.breeding2 <- cbind(4,1,picks[1:15], 4,1,picks[16:30],0)
#Generation of C3F2
population <- breeding.diploid(population, breeding.size=c(1035,0),
fixed.breeding = fixed.breeding2, repeat.mating = 69,
name.cohort="C3F2")
priorbv <- get.bv(population, cohorts = "DH-Founder")
resultbv <- get.bv(population, cohorts = "C3F2")
gain1 <- rowMeans(resultbv) - rowMeans(priorbv)
resultgeno <- get.geno(population, cohorts = "C3F2")
hetero1 <- mean(resultgeno==1) ## Share of heterozygous markers
p_i <- rowMeans(resultgeno)/2
p_i[p_i>0.5] <- 1-p_i[p_i>0.5]
hetero2 <- sum(p_i==0)/length(p_i) # Share fixated markers
acc1 <- analyze.bv(population, cohorts="DH-Founder")[[1]][1,]
acc2 <- analyze.bv(population, cohorts="C1F2")[[1]][1,]
acc3 <- analyze.bv(population, cohorts="C2F2")[[1]][1,]
fixed.breeding11 <- rbind(fixed.breeding1[,1:3], fixed.breeding1[,4:6])
fixed.breeding22 <- rbind(fixed.breeding2[,1:3], fixed.breeding2[,4:6])
raw1 <- get.pedigree(population,  database = cbind(fixed.breeding11, fixed.breeding11[,3] ), raw=TRUE)
raw1 <- rbind(raw1[,c(4:6,6)], raw1[,c(7:9,9)])
table1 <- table(get.pedigree(population, database = raw1)[,2:3])
raw1 <- get.pedigree(population,  database = cbind(fixed.breeding22, fixed.breeding22[,3] ), raw=TRUE)
raw1 <- rbind(raw1[,c(4:6,6)], raw1[,c(7:9,9)])
raw1 <- get.pedigree(population,  database = raw1 , raw=TRUE)
raw1 <- rbind(raw1[,c(4:6,6)], raw1[,c(7:9,9)])
table2 <- table(get.pedigree(population, database = raw1)[,2:3])
gain1
hetero1
hetero2
