data[,2]-data[,3]
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
}
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
change1
change2
min(abs(diff[c(change1, change2])))
diff[c(change1, change2]))
min(abs(diff[c(change1, change2)]))
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] + amount
diff[change2] = diff[change2] - amount
}
diff
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
amount
diff[change1]
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff
library(readxl)
data <- read_excel("C:/Users/pook001/OneDrive - Wageningen University & Research/heat_map.xlsx")
x = rep(1:6, 5)
y = sort(rep(1:5, 6))
dist = matrix(0, nrow=30, ncol=30)
for(index in 1:30){
for(index2 in 1:30){
dist[index,index2] = sqrt((x[index]-x[index2])^2 + (y[index]-y[index2])^2)
}
}
data
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff
sum(data[,2])
sum(data[,3])
diff = as.numeric(as.matrix(data[,2]-data[,3]))
sum(diff)
dist = 0
dist = matrix(0, nrow=30, ncol=30)
for(index in 1:30){
for(index2 in 1:30){
dist[index,index2] = sqrt((x[index]-x[index2])^2 + (y[index]-y[index2])^2)
}
}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
if(sum(diff)!=0){error()}
}
diff
amount
amount
dist = matrix(0, nrow=30, ncol=30)
for(index in 1:30){
for(index2 in 1:30){
dist[index,index2] = sqrt((x[index]-x[index2])^2 + (y[index]-y[index2])^2)
}
}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
while(sum(abs(diff))>0){
print(1)
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
if(sum(diff)!=0){error()}
}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
if(sum(diff)!=0){error()}
print(1)
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)))
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
diff[change1]
amount
diff[change2]
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
amount
amount
diff[change1]
diff[change2]
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
while(sum(abs(diff))>0){
print(1)
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list = numeric(100000)
for(index2 in 1:100000){
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
dist = amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist
}
change1
change2
amount = min(abs(diff[c(change1, change2)]))
dist = amount * dist[change1,change2]
dist
diff_list = numeric(100000)
for(index2 in 1:100000){
if(index2%%1000){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
dist1 = amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
dist
x = rep(1:6, 5)
y = sort(rep(1:5, 6))
dist = matrix(0, nrow=30, ncol=30)
for(index in 1:30){
for(index2 in 1:30){
dist[index,index2] = sqrt((x[index]-x[index2])^2 + (y[index]-y[index2])^2)
}
}
diff_list = numeric(100000)
for(index2 in 1:100000){
if(index2%%1000){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
dist1 = amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
dist = matrix(0, nrow=30, ncol=30)
for(index in 1:30){
for(index2 in 1:30){
dist[index,index2] = sqrt((x[index]-x[index2])^2 + (y[index]-y[index2])^2)
}
}
diff_list = numeric(100000)
for(index2 in 1:100000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
dist1 = amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
min(dist1)
min(dist_list)
min(diff_list)
diff_list = numeric(100000)
for(index2 in 1:100000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
plot(diff_list[1:10000])
min(diff_list)
sum(diff_list < 4075)
sum(diff_list < 4275)
diff_list = numeric(1000000)
for(index2 in 1:1000000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
min(diff_list[1:330000])
diff_list[diff_list>4200]
diff_list[diff_list<4200]
Rprof()
diff_list = numeric(1000000)
for(index2 in 1:1000000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
change2 = sample(which((diff*diff[change1] <0)),1)
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
Rprof(NULL)
summaryRprof()
change1
activ
activ = which((diff*diff[change1] <0))
activ
diff
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
change1 = sample(which(abs(diff)>0),1)
activ = which((diff*diff[change1] <0))
activ
dist[change1, activ]
max(dist)
diff_list = numeric(1000000)
for(index2 in 1:1000000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
activ = which((diff*diff[change1] <0))
change2 = sample(activ,1, prob = (7-dist[change1, activ])^2)
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
change1
activ
activ
diff
(7-dist[change1, activ])^2
change2 = sample(activ,1, prob = (7-dist[change1, activ])^2)
activ
diff_list = numeric(1000000)
for(index2 in 1:1000000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
activ = which((diff*diff[change1] <0))
if(length(activ)>1){
change2 = sample(activ,1, prob = (7-dist[change1, activ])^2)
} else{
change2 = activ
}
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
plot(diff_list[1:10000])
min(diff_list[1:25000])
sum(diff_list ,3750)
sum(diff_list < 3750)
sum(diff_list[1:25000] < 3750)
sum(diff_list[1:25000] < 4000)
diff_list = numeric(100000)
for(index2 in 1:100000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
activ = which((diff*diff[change1] <0))
if(length(activ)>1){
change2 = sample(activ,1, prob = (7-dist[change1, activ])^2)
} else{
change2 = activ
}
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
}
min(diff_list)
diff_list = numeric(100000)
cur_min = numeric(100000)
for(index2 in 1:100000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
activ = which((diff*diff[change1] <0))
if(length(activ)>1){
change2 = sample(activ,1, prob = (7-dist[change1, activ])^2)
} else{
change2 = activ
}
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
if(index2==1){
cur_min[index2] = dist1
} else{
cur_min[index2] = min(dist1, cur_min[index2-1])
}
}
plot(cur_min[1:10000*10])
min(diff_list)
plot(cur_min[(1:length(cur_min)/10)*10])
cur_min[(1:length(cur_min)/10)*10]
plot(cur_min[(1:length(cur_min)/10)*10])
diff_list = numeric(100000)
cur_min = numeric(100000)
for(index2 in 1:100000){
if(index2%%1000 == 0){print(index2)}
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
change1 = sample(which(abs(diff)>0),1)
activ = which((diff*diff[change1] <0))
if(length(activ)>1){
change2 = sample(activ,1, prob = (7-dist[change1, activ])^3)
} else{
change2 = activ
}
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
if(index2==1){
cur_min[index2] = dist1
} else{
cur_min[index2] = min(dist1, cur_min[index2-1])
}
}
plot(cur_min[(1:length(cur_min)/10)*10])
min(cur_min)
# initialization
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
# transfer between change1 and change2
change1 = sample(which(abs(diff)>0),1)
activ = which((diff*diff[change1] <0))
(7-dist[change1, activ])^3
(7-dist[change1, activ])
max(dist)
# i just brute force lots of randomly sampled ways to offset all different measurements
diff_list = numeric(100000) # each iteration
cur_min = numeric(100000) # minimum obstainable distance after x iterations
for(index2 in 1:100000){
if(index2%%1000 == 0){print(index2)}
# initialization
diff = as.numeric(as.matrix(data[,2]-data[,3]))
dist1 = 0
while(sum(abs(diff))>0){
# transfer between change1 and change2
change1 = sample(which(abs(diff)>0),1)
activ = which((diff*diff[change1] <0))
if(length(activ)>1){
change2 = sample(activ,1, prob = (6.5-dist[change1, activ])^3) # higher likelihood for adjacent spots
} else{
change2 = activ
}
amount = min(abs(diff[c(change1, change2)]))
dist1 = dist1 +  amount * dist[change1,change2]
if(diff[change1]<0){
amount = -amount
}
diff[change1] = diff[change1] - amount
diff[change2] = diff[change2] + amount
}
diff_list[index2] = dist1
if(index2==1){
cur_min[index2] = dist1
} else{
cur_min[index2] = min(dist1, cur_min[index2-1])
}
}
plot(cur_min[(1:length(cur_min)/10)*10])
min(cur_min)
