### Full sibs

rm(list = ls())
library(MoBPS)

chromolen<-c(2.865,2.633,2.251,2.122,2.082,1.922,1.89,1.733,1.687,1.735,1.638,1.742,1.289,1.238,1.302,1.342,1.375,1.242,1.122,1.025,0.685,0.861)
length(chromolen)

population1 <- creating.diploid(nindi=2000,  ## here we create the population base with ne as number of individuals
                                    nsnp=10000,  ## this is the number of SNPs
                                    n.additive = 100, ## this is some random trait with 100 qtl
                                chr.nr = 22,
                                    chromosome.length = chromolen) ## and length of the chromosome in Morgan



for (index in 1:10){

  if (index<=5){

    population1<-breeding.diploid(population1, breeding.size=2000, ### males and female as defined above
                                  selection.size = c(1000,1000), ### selection for parents of next gen
                                  best.selection.ratio.m = 10, best.selection.ratio.f = 10,  ### ignore this
                                  recombination.rate= 1,  ### 1 recombination per Morgan
                                  mutation.rate= 0,
                                  store.breeding.totals = TRUE)   ### no mutation
  }

  else {

    population1<-breeding.diploid(population1, breeding.size=2000, ### males and female as defined above
                                  selection.size = c(200,200), ### selection for parents of next gen
                                  best.selection.ratio.m = 10, best.selection.ratio.f = 10,  ### ignore this
                                  repeat.mating = c(10), ## this makes sure the groups of 10 individuals have same father and mother
                                  recombination.rate= 1,  ### 1 recombination per Morgan
                                  max.offspring = 10, ### all selected individuals will provide max 10 offspring -  no sampling
                                  mutation.rate= 0,
                                  store.breeding.totals = TRUE)   ### no mutation
  }



}
