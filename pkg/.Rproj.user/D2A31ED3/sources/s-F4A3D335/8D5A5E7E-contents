# Imputing - Paper - PLOTS
load("C:/Users/pook/Desktop/LD_decay_bp3.RData")
load("C:/Users/pook/Desktop/LD_decay.RData")
a <- ksmooth(dist_breeding,ld_breeding, bandwidth=25000)
{
  #png(file="C:/Users/pook/Desktop/Fig9c_imputing.png", width=2250, height= 1160, res=300)
  png(file="C:/Users/pook/Desktop/Plots_imputing/Fig1.png", width=2250, height= 960, res=300)
  par(mar=c(4.1,4.1,0.6,1.1))
  par(mfrow=c(1,2))
  plot(a, xlim=c(0,1500000),type="l", col="darkgreen", lwd=2, xlab="distance (in bp)", ylab=expression(r^2), ylim=c(0, 0.6))
  
  lines(ksmooth(dist_maize,ld_maize, bandwidth=25000), type="l", col="red", lwd=2)
  lines(ksmooth(dist_diversity,ld_diversity, bandwidth=25000), type="l", col="blue", lwd=2)
  text(1500000,0.58, label="A", cex=1.3)
  
  ld <- seq <- c(1, 1:20*10, 1:10*50 + 200)
  
  plot(ld, ld_decay_maize, col="red",type="l", ylim=c(0, 0.6), xlab="distance (in SNP)", ylab="", lwd=2)
  lines(ld, ld_decay_lohman, col="darkgreen", lwd=2)
  lines(ld, ld_decay_diversity, col="blue", lwd=2)
  legend("topright", c("maize-DH", "chicken-commercial", "chicken-diversity"), lty=c(1,1,1), lwd=c(2,2,2),
         col=c("red", "darkgreen", "blue"))
  text(700,0.58, label="B", cex=1.3)
  dev.off()
}


# Error rate allele freq - Figure 1: 

{
  error1 <- NULL
  error2 <- NULL
  error3 <- NULL
  error4 <- NULL
  minor1 <- NULL
  details <- list()
  
  error1 <- error2 <- error3 <- error4 <- matrix(0L, nrow=410000, ncol=501)
  row <- 1
  snps <- NULL
  for(chromo in 1:10){
    print(chromo)
    load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiKE",chromo,"buildwindow25.RData"))
    #error1 <- rbind(error1,error)
    storage.mode(error) <- "integer"
    error1[row:(row+nrow(error)-1),] <- error 
    load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiKE",chromo,"default.RData"))
    #error2 <- rbind(error2, error)
    storage.mode(error) <- "integer"
    error2[row:(row+nrow(error)-1),] <- error 
    load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiKE",chromo,"modelscale15.RData"))
    #error3 <- rbind(error3, error)
    storage.mode(error) <- "integer"
    error3[row:(row+nrow(error)-1),] <- error 
    load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiKE",chromo,"beagle5.RData"))
    #error4 <- rbind(error4, error)
    storage.mode(error) <- "integer"
    error4[row:(row+nrow(error)-1),] <- error 
    snps <- c(snps, nrow(error))
    row <- row + nrow(error)
    load(paste0("C:/Users/pook/Desktop/Full_allelfreq/KEchromo",chromo,"_detail.RData"))
    minor1 <- c(minor1,minor)
    for(index in 1:length(detail)){
      details[[length(details)+1]] <- detail[[index]]
    }
  }
  error1 <- error1[1:(row-1),]
  error2 <- error2[1:(row-1),]
  error3 <- error3[1:(row-1),]
  error4 <- error4[1:(row-1),]
  
  
  
  freqs <- sort(unique(c(minor1)))
  error_table <- cbind(minor1, 0, 0, 0,0,0,0,0,0,0)
  
  for(index in 1:nrow(error1)){
    pos <- length(details[[index]])
    error_table[index,2] <- pos
    error_table[index,3] <- sum(error1[index, details[[index]]])
    error_table[index,4] <- sum(error1[index, -details[[index]]])
    error_table[index,5] <- sum(error2[index, details[[index]]])
    error_table[index,6] <- sum(error2[index, -details[[index]]])
    error_table[index,7] <- sum(error3[index, details[[index]]])
    error_table[index,8] <- sum(error3[index, -details[[index]]])
    error_table[index,9] <- sum(error4[index, details[[index]]])
    error_table[index,10] <- sum(error4[index, -details[[index]]])
  }
  
  error_table[,c(3,5,7,9)] <- error_table[,c(3,5,7,9)] / error_table[,2] / 2
  error_table[,c(3,5,7,9)+1] <- error_table[,c(3,5,7,9)+1] / (ncol(error1) -error_table[,2]) / 2
  
  spline1 <- numeric(length(freqs)*2)
  spline2 <- numeric(length(freqs)*2)
  spline3 <- numeric(length(freqs)*2)
  spline4 <- numeric(length(freqs)*2)
  
  rows1 <- rowSums(error1)/ncol(error1)/2
  rows2 <- rowSums(error2)/ncol(error2)/2
  rows3 <- rowSums(error3)/ncol(error3)/2
  rows4 <- rowSums(error4)/ncol(error4)/2
  
  p <- length(freqs)*2+1
  for(index in 1:length(freqs)){
    rel <- which(error_table[,1]==freqs[index])
    spline1[index] <- mean(error_table[rel,3])
    spline2[index] <- mean(error_table[rel,5])
    spline3[index] <- mean(error_table[rel,7])
    spline4[index] <- mean(error_table[rel,9])
    spline1[p- index] <- mean(error_table[rel,4])
    spline2[p- index] <- mean(error_table[rel,6])
    spline3[p- index] <- mean(error_table[rel,8])
    spline4[p- index] <- mean(error_table[rel,10])
  } 
  
  
} # Pre-Computations

a <- ksmooth(c(error_table[,1], 1-error_table[,1]), c(error_table[,3], error_table[,4]), bandwidth = 0.02)
b <- ksmooth(c(error_table[,1], 1-error_table[,1]), c(error_table[,5], error_table[,6]), bandwidth = 0.02)
c <- ksmooth(c(error_table[,1], 1-error_table[,1]), c(error_table[,7], error_table[,8]), bandwidth = 0.02)
d <- ksmooth(c(error_table[,1], 1-error_table[,1]), c(error_table[,9], error_table[,10]), bandwidth = 0.02)

#png(file="C:/Users/pook/Desktop/Fig1_imputing.png", width=2250, height= 1360, res=300)
{
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig2.png", width=2250, height= 1060, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(4.6,4.1,1.1,1.1))
plot(a$x, a$y *100, col="red", type="l", yaxt="n", log="y", lwd=2, xlab="allele frequency", ylab="error rate in %", ylim=c(min(a$y,b$y,c$y,d$y), max(a$y,b$y,c$y,d$y))*100)
lines(b$x, b$y*100, lwd=2)
lines(c$x, c$y*100, lwd=2, col="blue")
lines(d$x, d$y*100, lwd=2, col="green")
legend("topright", c("Beagle 4.1 default", "Beagle 4.0 & buildwindow = 25", "Beagle 4.1 & modelscale = 1.5", "Beagle 5.0 default"), lty=c(1,1,1,1), col=c(1,2,"blue","green"), cex=1,
       lwd=c(2,2,2,2))
axis(side=2, at=c(0.1,0.01,0.001,0.0001)*100)
dev.off()
}
{
  png(file="C:/Users/pook/Desktop/Poster_imputing1.png", width=2250, height= 630, res=300)
  par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
  par(mar=c(3.1,4.1,0.3,1.1))
  plot(a$x, a$y *100, col="red", type="l", yaxt="n", log="y", lwd=2, xlab="allele frequency", ylab="error rate in %", ylim=c(min(a$y,b$y,c$y,d$y), max(a$y,b$y,c$y,d$y))*100)
  lines(b$x, b$y*100, lwd=2)
  lines(c$x, c$y*100, lwd=2, col="blue")
  lines(d$x, d$y*100, lwd=2, col="green")
  legend("topright", c("Beagle 4.1 default", "Beagle 4.0 & buildwindow = 25", "Beagle 4.1 & modelscale = 1.5", "Beagle 5.0 default"), lty=c(1,1,1,1), col=c(1,2,"blue","green"), cex=0.8,
         lwd=c(2,2,2,2))
  axis(side=2, at=c(0.1,0.01,0.001,0.0001)*100)
  title(xlab="allele frequency", line=2.0)
  dev.off()
}
a <- ksmooth(1:length(rows1), rows1, bandwidth = 3000)
b <- ksmooth(1:length(rows2), rows2, bandwidth = 3000)
c <- ksmooth(1:length(rows3), rows3, bandwidth = 3000)
d <- ksmooth(1:length(rows4), rows4, bandwidth = 3000)
nsnp <- numeric(10)
for(chromo in 1:10){
  print(chromo)
  load(paste0("C:/Users/pook/Desktop/Full_allelfreq/KEchromo",chromo,"_detail.RData"))
  nsnp[chromo] <- length(minor)
}

# ksmooth over chromosome boundries
{
png(file="C:/Users/pook/Desktop/Fig2_imputing.png", width=2250, height= 1420, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))
plot(a$x, a$y*100, col="red", xaxt="n", type="l", ylim=c(0, max(c(a$y, b$y, c$y, d$y))+0.002)*100, lwd=2, xlab="chromosome", ylab="error rate in %")
lines(b$x, b$y*100, lwd=2)
lines(c$x, c$y*100, lwd=2, col="blue")
lines(d$x, d$y*100, lwd=2, col="green")


abline(v=cumsum(c(0,nsnp)), lwd=2, lty=3)
axis(side=1, at=cumsum(c(nsnp))-nsnp/2, labels=1:10, tick=FALSE)
legend("topright", c("Beagle 4.1 default", "Beagle 4.0 & buildwindow = 25", "Beagle 4.1 & modelscale = 1.5", "Beagle 5.0 default"), lty=c(1,1,1,1), col=c(1,2,"blue","green"), cex=1,
       lwd=c(2,2,2,2), bg="white")
dev.off()
}
a <- b <- c <- d <- list()
for(chromo in 1:10){
  a[[chromo]] <- ksmooth(cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo], 
                         rows1[cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo]], bandwidth = 3000)
  b[[chromo]] <- ksmooth(cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo], 
                         rows2[cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo]], bandwidth = 3000)
  c[[chromo]] <- ksmooth(cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo], 
                         rows3[cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo]], bandwidth = 3000)
  d[[chromo]] <- ksmooth(cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo], 
                         rows4[cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo]], bandwidth = 3000)
}
  
nsnp <- numeric(10)
for(chromo in 1:10){
  print(chromo)
  load(paste0("C:/Users/pook/Desktop/Full_allelfreq/KEchromo",chromo,"_detail.RData"))
  nsnp[chromo] <- length(minor)
}

# ksmooth over chromosome boundries
{
png(file="C:/Users/pook/Desktop/Fig2b_imputing.png", width=2250, height= 1420, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))
plot(0,0, xaxt="n", type="l", xlim=c(0, sum(snps)), ylim=c(0, 0.011)*100, lwd=2, xlab="chromosome", ylab="error rate in %")
for(chromo in 1:10){
  lines(a[[chromo]]$x, a[[chromo]]$y*100, col="red")
  lines(b[[chromo]]$x, b[[chromo]]$y*100, lwd=2)
  lines(c[[chromo]]$x, c[[chromo]]$y*100, lwd=2, col="blue")
  lines(d[[chromo]]$x, d[[chromo]]$y*100, lwd=2, col="green") 
}



abline(v=cumsum(c(0,nsnp)), lwd=2, lty=3)
axis(side=1, at=cumsum(c(nsnp))-nsnp/2, labels=1:10, tick=FALSE)
legend("topright", c("Beagle 4.1 default", "Beagle 4.0 & buildwindow = 25", "Beagle 4.1 & modelscale = 1.5", "Beagle 5.0 default"), lty=c(1,1,1,1), col=c(1,2,"blue","green"), cex=1,
       lwd=c(2,2,2,2), bg="white")
dev.off()
}

#png(file="C:/Users/pook/Desktop/Fig2c_imputing.png", width=2250, height= 1420, res=300)
{
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig3.png", width=2250, height= 1420, res=300)
abstand <- 5000
a1 <- a
b1 <- b
c1 <- c
d1 <- d
for(chromo in 1:10){
  a1[[chromo]]$x <- a[[chromo]]$x + (chromo-1) * abstand
  b1[[chromo]]$x <- b[[chromo]]$x + (chromo-1) * abstand
  c1[[chromo]]$x <- c[[chromo]]$x + (chromo-1) * abstand
  d1[[chromo]]$x <- d[[chromo]]$x + (chromo-1) * abstand
}

par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))
plot(0,0, xaxt="n", type="l", xlim=c(0, sum(snps)+abstand*9), ylim=c(0, 0.011)*100, lwd=2, xlab="chromosome", ylab="error rate in %")
for(chromo in 1:10){
  lines(a1[[chromo]]$x,a1[[chromo]]$y*100, col="red")
  lines(b1[[chromo]]$x,b1[[chromo]]$y*100, lwd=2)
  lines(c1[[chromo]]$x,c1[[chromo]]$y*100, lwd=2, col="blue")
  lines(d1[[chromo]]$x,d1[[chromo]]$y*100, lwd=2, col="green") 
}



axis(side=1, at=cumsum(c(nsnp+abstand))-(nsnp+abstand)/2, labels=1:10, tick=FALSE)
axis(side=1, at=cumsum(c(nsnp+abstand))-abstand/2, labels=rep("", 10), tick=TRUE)
legend("topright", c("Beagle 4.1 default", "Beagle 4.0 & buildwindow = 25", "Beagle 4.1 & modelscale = 1.5", "Beagle 5.0 default"), lty=c(1,1,1,1), col=c(1,2,"blue","green"), cex=1,
       lwd=c(2,2,2,2), bg="white")
dev.off()
}

{
  race <- "KE"
  errort <- matrix(nrow=10, ncol=68)
  
  for(chromo in 1:10){
    index <- 1
    for(type in c("beagle4","buildwindow10","buildwindow25","buildwindow50","buildwindow100","buildwindow500","buildwindow2500",
                  "default","modelscale05","modelscale1","modelscale15","modelscale2","modelscale25","modelscale3","modelscale5","nsamples2","nsamples10","nsamples25",
                  "err000001", "ne1000", "ne5000", "ne10000", "beagle5",
                  "phasestates50", "phasestates100", "phasestates500", "phasestates1000",
                  "phaseseg1", "phaseseg2", "phaseseg10", "phaseseg25",
                  "impseg2", "impseg4", "impseg10", "impseg20",
                  "impstates500", "impstates1000" ,"impstates3000", "impstates5000",
                  "window10", "window20", "window100", "window200",
                  "beagle5ne100", "beagle5ne1000", "beagle5ne10000", "beagle5ne100000", "modelscale125", "modelscale175", "buildwindow25nsamples25",
                  "buildwindow25nsamples25niterations2", "buildwindow25nsamples25niterations25", "burnin2", "burnin25",
                  "modelscale15niterations2", "modelscale15niterations25",
                  "buildwindow200", "buildwindow1", "buildwindow2", "buildwindow3", "buildwindow5", "buildwindow6", "buildwindow8",
                  "cluster0001", "cluster001", "cluster002","err000001")){
      name <- paste0("C:/Users/pook/Desktop/Imputation_paper_bucket/Imputing_error/errorPosi", race, chromo, type, ".txt")
      err <- read.table(name)
      errort[chromo, index] <- mean(err[err[,1]!=0,1])
      index <- index +1
    }
  }
  errort <- errort / 2
  
  colnames(errort) <- c("beagle4","buildwindow10","buildwindow25","buildwindow50","buildwindow100","buildwindow500","buildwindow2500",
                        "default","modelscale05","modelscale1","modelscale15","modelscale2","modelscale25","modelscale3","modelscale5","nsamples2","nsamples10","nsamples25",
                        "err000001", "ne1000", "ne5000", "ne10000", "beagle5",
                        "phasestates50", "phasestates100", "phasestates500", "phasestates1000",
                        "phaseseg1", "phaseseg2", "phaseseg10", "phaseseg25",
                        "impseg2", "impseg4", "impseg10", "impseg20",
                        "impstates500", "impstates1000" ,"impstates3000", "impstates5000",
                        "window10", "window20", "window100", "window200",
                        "beagle5ne100", "beagle5ne1000", "beagle5ne10000", "beagle5ne100000",
                        "modelscale125", "modelscale175", "buildwindow25nsamples25",
                        "buildwindow25nsamples25niterations2", "buildwindow25nsamples25niterations25", "burnin2", "burnin25",
                        "modelscale15niterations2", "modelscale15niterations25", "buildwindow200","buildwindow1", "buildwindow2", "buildwindow3", "buildwindow5", "buildwindow6", "buildwindow8",
                        "cluster0001", "cluster001", "cluster002", "err000001", "err0001")
}
colnames(errort)

{
#png(file="C:/Users/pook/Desktop/Fig3_imputing.png", width=2250, height= 1120, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig4.png", width=2250, height= 1120, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1, mfrow=c(1,2))
both <- c(2,3,4,5,6,1,7,8,10,11,12,13,14, 58,59,60,61)
values <- c(1,3,10,25,50,100,200,500,1200,2500)
cols <- c(58,60,2,3,4,5,57,6,1,7)
par(mar=c(5.1,4.1,1.1,0.1))
plot(0,-1000, ylim=c(0, max(errort[,both]))*100, xlim=c(min(values), max(values)), log="x", xlab="buildwindow", ylab="error rate in %")
for(chromo in 1:10){
  points(values, errort[chromo,cols]*100)
}
for(chromo in 1:10){
  lines(values, errort[chromo,cols]*100)
}
abline(v=1200,lwd=2, col="red")
text(530,0.03, label="default", col="red", cex=1)
text(1,0.34, label="A", cex=1.3)

values <- c(0.8,1,1.25,1.5,1.75,2, 2.5 , 3 )
cols <- c(8,10,48,11,49,12,13,14)
par(mar=c(5.1,2.1,1.1,2.1))
plot(0,-10, ylim=c(0, max(errort[,both]))*100, xlim=c(min(values), max(values)), xlab="modelscale", ylab="",
     yaxt="n")
axis(side= 2, seq(0,0.0035, by=0.0005)*100, labels=FALSE)
for(chromo in 1:10){
  points(values, errort[chromo,cols]*100)
}
for(chromo in 1:10){
  lines(values, errort[chromo,cols]*100)
}
abline(v=0.8,lwd=2, col="red")
text(1.06,0.03, label="default", col="red", cex=1)
#legend("topright", "B", bty="n", cex=1.8)
text(3,0.34, label="B", cex=1.3)
dev.off()
}

{
  race <- "KE"
  errort <- matrix(nrow=10, ncol=59)
  small <- 350
  for(chromo in 1:10){
    index <- 1
    for(type in  c("ne1", "ne3", "ne10","ne30", "ne100", "ne300", "ne1000", "ne3000", "ne10000", "ne30000", "ne100000",
                   "modelscale1", "modelscale125", "modelscale15", "modelscale175", "modelscale2",
                   "default", "buildwindow25","buildwindow50","buildwindow100","buildwindow500","buildwindow2500",
                   "beagle5ne1", "beagle5ne3", "beagle5ne10", "beagle5ne30",
                   "beagle5ne100", "beagle5ne300","beagle5ne1000","beagle5ne3000", "beagle5ne10000", "beagle5ne30000", "beagle5ne100000",
                   "beagle5", "nsample2", "nsample10", "nsample25", "beagle4",
                   "beagle5ne1000window10","beagle5ne1000window20","beagle5ne1000window100","beagle5ne1000burn25",
                   "beagle5ne1000iterations25","beagle5ne1000impseg2","beagle5ne1000impseg4","beagle5ne1000impseg10",
                   "beagle5ne1000impseg20","beagle5ne1000impstates500","beagle5ne1000impstates1000","beagle5ne1000impstates3000","beagle5ne1000impstates5000",
                   "ne300modelscale1", "ne300modelscale125", "ne300modelscale15", "ne300modelscale175", "ne300modelscale2",
                   "buildwindow100nsamples25phase25", "buildwindow100nsamples25impute25", "buildwindow100nsamples25burnin25")){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error/errorPosi", race, chromo, type, "sub50_small",small,".txt")
      err <- read.table(name)
      errort[chromo, index] <- mean(err[err[,1]!=0,1])
      index <- index +1
    }
  }
  
  
  colnames(errort) <- c("ne1", "ne3", "ne10","ne30", "ne100", "ne300", "ne1000", "ne3000", "ne10000", "ne30000", "ne100000",
                        "modelscale1", "modelscale125", "modelscale15", "modelscale175", "modelscale2",
                        "default", "buildwindow25","buildwindow50","buildwindow100","buildwindow500","buildwindow2500",
                        "beagle5ne1", "beagle5ne3", "beagle5ne10", "beagle5ne30",
                        "beagle5ne100", "beagle5ne300","beagle5ne1000","beagle5ne3000", "beagle5ne10000", "beagle5ne30000", "beagle5ne100000",
                        "beagle5", "nsample2", "nsample10", "nsample25", "beagle4",
                        "beagle5ne1000window10","beagle5ne1000window20","beagle5ne1000window100","beagle5ne1000burn25",
                        "beagle5ne1000iterations25","beagle5ne1000impseg2","beagle5ne1000impseg4","beagle5ne1000impseg10",
                        "beagle5ne1000impseg20","beagle5ne1000impstates500","beagle5ne1000impstates1000","beagle5ne1000impstates3000","beagle5ne1000impstates5000",
                        "ne300modelscale1", "ne300modelscale125", "ne300modelscale15", "ne300modelscale175", "ne300modelscale2",
                        "buildwindow100nsamples25phase25", "buildwindow100nsamples25impute25", "buildwindow100nsamples25burnin25")
  colMeans(errort)
  
}
{
#png(file="C:/Users/pook/Desktop/Fig4_imputing.png", width=2250, height= 1120, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig7.png", width=2250, height= 1120, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))
both <- c(1:8,17,23:34)
values <- c(1,3,10,30,100,300,1000,3000,10000,30000, 100000, 1000000)
cols <- c(1:11,17)
par(mar=c(5.1,4.1,1.1,0.1))
plot(10,10, ylim=c(0.0008, max(errort[,both]))*100, xlim=c(min(values), max(values)), log="xy", xlab="effective population size (ne)", ylab="error rate in %")
for(chromo in 1:10){
  points(values, colMeans(errort[,cols])*100, col="blue")
}
for(chromo in 1:10){
  lines(values, colMeans(errort[,cols])*100, col="blue", lwd=2)
}
abline(v=1000000,lwd=2, col="red")
text(500000,0.3, label="default", col="red", cex=1)

cols <- c(23:34)

for(chromo in 1:10){
  points(values, colMeans(errort[,cols])*100, col="green")
}
for(chromo in 1:10){
  lines(values, colMeans(errort[,cols])*100, col="green", lwd=2)
}

legend("topleft", c("Beagle 4.1", "Beagle 5.0"), lty=c(1,1), col=c("blue","green"), cex=1,
       lwd=c(2,2))

dev.off()
}

{
  #png(file="C:/Users/pook/Desktop/Fig4_imputing.png", width=2250, height= 1120, res=300)
  png(file="C:/Users/pook/Desktop/Poster_imputing2.png", width=2250, height= 600, res=300)
  par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
  both <- c(1:8,17,23:34)
  values <- c(1,3,10,30,100,300,1000,3000,10000,30000, 100000, 1000000)
  cols <- c(1:11,17)
  par(mar=c(3.1,4.1,1.1,0.1))
  plot(10,10, ylim=c(0.0008, max(errort[,both]))*100, xlim=c(min(values), max(values)), log="xy", xlab="effective population size (ne)", ylab="error rate in %")
  for(chromo in 1:10){
    points(values, colMeans(errort[,cols])*100, col="blue")
  }
  for(chromo in 1:10){
    lines(values, colMeans(errort[,cols])*100, col="blue", lwd=2)
  }
  abline(v=1000000,lwd=2, col="red")
  text(500000,0.3, label="default", col="red", cex=1)
  
  cols <- c(23:34)
  
  for(chromo in 1:10){
    points(values, colMeans(errort[,cols])*100, col="green")
  }
  for(chromo in 1:10){
    lines(values, colMeans(errort[,cols])*100, col="green", lwd=2)
  }
  
  legend("topleft", c("Beagle 4.1", "Beagle 5.0"), lty=c(1,1), col=c("blue","green"), cex=1,
         lwd=c(2,2))
  title(xlab="effective population size (ne)", line=2.0)
  
  dev.off()
}

{
#png(file="C:/Users/pook/Desktop/Fig5_imputing.png", width=2250, height= 1420, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig6.png", width=2250, height= 1420, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(4.1,4.1,0.6,1.1))
race <- "KE"
color <- c(1,"blue","green", 2, "brown")
index <- 1
for(type in c("default", "ne300", "beagle5ne1000", "buildwindow100", "beagle5")){
  errort <- matrix(nrow=10, ncol=8)
  for(chromo in 1:10){
    opt <- c(25,50,100,150,200,250,300,350)
    for(small in 1:8){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error/errorPosi", race, chromo, type, "sub50_small",opt[small],".txt")
      err <- read.table(name)
      errort[chromo, small] <- mean(err[err[,1]!=0,1])
    }
    
  }
  
  if(type=="default"){
    plot(opt,colMeans(errort)*100, ylim=c(0.00015,0.1)*100, log="y", ylab="error rate in %", xlab="size of the reference panel", col=color[index],
         yaxt="n")
    axis(side=2, at=c(0.1, 0.01, 0.001)*100, cex=0.8)
    axis(side=2, at=c(0.03,0.003,0.0003)*100, cex=0.8)
    
  } else{
    points(opt, colMeans(errort)*100, col=color[index])
  }
  lines(opt,colMeans(errort)*100, col=color[index], lwd=2)
  index <- index + 1
}
legend("bottomleft", c("Beagle 4.1 default", "Beagle 5.0 default",  "Beagle 4.0 & buildwindow = 100", "Beagle 4.1 & ne = 300", "Beagle 5.0 & ne = 1.000"), lty=c(1,1,1,1,1), col=c(1,"brown",2,"blue","green"), cex=1,
       lwd=c(2,2,2,2))

dev.off()
}

error_map <- NULL
for(chromo in 1:10){
  print(chromo)
  load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiKE",chromo,"beagle5.RData"))
  error_map <- c(error_map, rowSums(error)/1002)
}

{
#png(file="C:/Users/pook/Desktop/Fig6_imputing.png", width=2250, height= 820, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig8.png", width=2250, height= 820, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))

plot(error_map[2:100000+000000]*100, xlab="SNP number", ylab="error rate in %", cex=0.4)
dev.off()
}

{
  race <- "KE"
  errort <- matrix(nrow=10, ncol=3)
  small <- 350
  for(chromo in 1:10){
    index <- 1
    for(type in  c("beagle4", "default", "beagle5")){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error_S0/errorPosi", race, chromo, type,".txt")
      err <- read.table(name)
      errort[chromo, index] <- mean(err[err[,1]!=0,1])
      index <- index +1
    }
  }
  
  
  colnames(errort) <- c("beagle4", "default", "beagle5")#
  colMeans(errort)
  
}

{
  race <- "KE"
  errort <- matrix(nrow=10, ncol=36)
  high <- low  <- matrix(nrow=10,ncol=36)
  for(chromo in 1:10){
    index <- 1
    for(type in  c("beagle4", "default", "beagle5" ,
                   "buildwindow10","buildwindow25", "buildwindow50","buildwindow100","buildwindow500","buildwindow2500","burnits25","imputeits25","modelscale1","modelscale125","modelscale15","modelscale175","modelscale2","nsample2","nsample10","nsample25","phaseits25", "burnits25", "imputeits25",
                   "phaseseg2", "phaseseg10", "phasestates100","phasestates500","phasestates1000","modelscale1niterations2","modelscale1niterations25", "niterations2", "niterations25", "buildwindow50nsamples25allits25", "burnin25", "burnin2", "iterations2", "iterations25")){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error_S0/errorPosi", race, chromo, type,".txt")
      err <- read.table(name)
      errort[chromo, index] <- mean(err[err[,1]!=0,1])
      high[chromo, index] <- mean(err[err[,1]!=0,1]) + sd(err[err[,1]!=0,1]) * 1.96 / sqrt(50)
      low[chromo, index] <- mean(err[err[,1]!=0,1]) - sd(err[err[,1]!=0,1]) * 1.96 / sqrt(50)
      index <- index +1
    }
  }
  
  
  colnames(errort) <- c("beagle4", "default", "beagle5" ,
                        "buildwindow10","buildwindow25", "buildwindow50","buildwindow100","buildwindow500","buildwindow2500","burnits25","imputeits25","modelscale1","modelscale125","modelscale15","modelscale175","modelscale2","nsample2","nsample10","nsample25","phaseits25", "burnits25", "imputeits25",
                        "phaseseg2", "phaseseg10", "phasestates100","phasestates500","phasestates1000","modelscale1niterations2","modelscale1niterations25", "niterations2", "niterations25", "buildwindow50nsamples25allits25", "burnin25", "burnin2", "iterations2", "iterations25")
                          
  colMeans(errort)
  
}

{
#png(file="C:/Users/pook/Desktop/Fig10_imputing.png", width=1250, height= 2220, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig5.png", width=1250, height= 2220, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(4.2,9.1,1.7,1.1))

par(mfrow=c(3,1))
b4 <- c(32, 21:19, 6,1)
b41 <- c(2,12,31,29)
b5 <- c(3,24,25,33,36)
xlims <- c(0,max(colMeans(errort)[c(b4,b41,b5)])+0.0001)
barplot(colMeans(errort)[b4]*100, horiz=TRUE, names.arg=c("Default", "buildwindow = 50", "nsamples = 25","phase-its = 25", "burnin-its = 25", "all adapted")[6:1], las=1, cex.names=1,
        main="Parameter adaptation BEAGLE 4.0",xlim=xlims*100)
for(index in 1:length(b4)){
  lines( c(colMeans(low)[b4[index]], colMeans(high)[b4[index]])*100, c(index*1.2,index*1.2) -0.5)
  lines(c(colMeans(low)[b4[index]], colMeans(low)[b4[index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
  lines(c(colMeans(high)[b4[index]], colMeans(high)[b4[index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
}

barplot(colMeans(errort)[b41][4:1]*100, horiz=TRUE, names.arg=c("Default", "modelscale = 1.0", "niterations = 25","all adapted")[4:1], las=1, cex.names=1,
        main="Parameter adaptation BEAGLE 4.1",xlim=xlims*100)
for(index in 1:length(b41)){
  lines( c(colMeans(low)[b41[4:1][index]], colMeans(high)[b41[4:1][index]])*100, c(index*1.2,index*1.2) -0.5)
  lines(c(colMeans(low)[b41[4:1][index]], colMeans(low)[b41[4:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
  lines(c(colMeans(high)[b41[4:1][index]], colMeans(high)[b41[4:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
}

barplot(colMeans(errort)[b5][5:1]*100, horiz=TRUE, names.arg=c("Default", "phase-segments = 10", "phase-states = 100","burn-in = 25", "iterations = 25")[5:1], las=1, cex.names=1,
        main="Parameter adaptation BEAGLE 5.0",xlim=xlims*100, xlab="error rate in %")
for(index in 1:length(b5)){
  lines( c(colMeans(low)[b5[5:1][index]], colMeans(high)[b5[5:1][index]])*100, c(index*1.2,index*1.2) -0.5)
  lines(c(colMeans(low)[b5[5:1][index]], colMeans(low)[b5[5:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
  lines(c(colMeans(high)[b5[5:1][index]], colMeans(high)[b5[5:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
}

dev.off()
}

load("C:/Users/pook/Downloads/MAZE_DHs_Raw600kGenoData.RData")
{
  race <- "KE"
  errort <- matrix(nrow=10, ncol=11)
  small <- 350
  for(chromo in 1:10){
    index <- 1
    for(type in  c("beagle4","buildwindow5","buildwindow10", "buildwindow25", "default", 
                   "modelscale1", "modelscale125", "modelscale15", "modelscale175",
                    "modelscale2","beagle5")){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error_50k/errorPosi", race, chromo, type,".txt")
      err <- read.table(name)
      errort[chromo, index] <- mean(err[err[,1]!=0,1])
      index <- index +1
    }
  }
  
  
  colnames(errort) <- c("beagle4","buildwindow5","buildwindow10", "buildwindow25", "default", 
                        "modelscale1", "modelscale125", "modelscale15", "modelscale175",
                        "modelscale2","beagle5")
  colMeans(errort)
  
}
{
#png(file="C:/Users/pook/Desktop/S1_imputing.png", width=2250, height= 1420, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/FigS1.png", width=2250, height= 1420, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))
for(chromo in 1:10){
  print(chromo)
  load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiKE",chromo,"beagle4.RData"))
  error_50 <- error
  load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiKE",chromo,"buildwindow10.RData"))
  error_10 <- error
  
  if(chromo==1){
    plot(rowSums(error_10)[-1], rowSums(error_50)[-1], cex=0.7,
         xlab="number of errors using buildwindow = 10", ylab="number of errors using buildwindow = 1200")
  } else{
    points(rowSums(error_10), rowSums(error_50), cex=0.7)
  }

}

abline(0,1, lwd=2, col="red")
dev.off()
}

{
  race <- "KE"
  errort <- matrix(nrow=10, ncol=56)
  
  for(chromo in 1:10){
    index <- 1
    for(type in c("beagle4","buildwindow10","buildwindow25","buildwindow50","buildwindow100","buildwindow500","buildwindow2500",
                  "default","modelscale05","modelscale1","modelscale15","modelscale2","modelscale25","modelscale3","modelscale5","nsamples2","nsamples10","nsamples25",
                  "err000001", "ne1000", "ne5000", "ne10000", "beagle5",
                  "phasestates50", "phasestates100", "phasestates500", "phasestates1000",
                  "phaseseg1", "phaseseg2", "phaseseg10", "phaseseg25",
                  "impseg2", "impseg4", "impseg10", "impseg20",
                  "impstates500", "impstates1000" ,"impstates3000", "impstates5000",
                  "window10", "window20", "window100", "window200",
                  "beagle5ne100", "beagle5ne1000", "beagle5ne10000", "beagle5ne100000", "modelscale125", "modelscale175", "buildwindow25nsamples25",
                  "buildwindow25nsamples25niterations2", "buildwindow25nsamples25niterations25", "burnin2", "burnin25",
                  "modelscale15niterations2", "modelscale15niterations25")){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error/errorPosi", race, chromo, type, ".txt")
      err <- read.table(name)
      errort[chromo, index] <- mean(err[err[,1]!=0,1])
      index <- index +1
    }
  }
  errort <- errort / 2
  
  colnames(errort) <- c("beagle4","buildwindow10","buildwindow25","buildwindow50","buildwindow100","buildwindow500","buildwindow2500",
                        "default","modelscale05","modelscale1","modelscale15","modelscale2","modelscale25","modelscale3","modelscale5","nsamples2","nsamples10","nsamples25",
                        "err000001", "ne1000", "ne5000", "ne10000", "beagle5",
                        "phasestates50", "phasestates100", "phasestates500", "phasestates1000",
                        "phaseseg1", "phaseseg2", "phaseseg10", "phaseseg25",
                        "impseg2", "impseg4", "impseg10", "impseg20",
                        "impstates500", "impstates1000" ,"impstates3000", "impstates5000",
                        "window10", "window20", "window100", "window200",
                        "beagle5ne100", "beagle5ne1000", "beagle5ne10000", "beagle5ne100000",
                        "modelscale125", "modelscale175", "buildwindow25nsamples25",
                        "buildwindow25nsamples25niterations2", "buildwindow25nsamples25niterations25", "burnin2", "burnin25",
                        "modelscale15niterations2", "modelscale15niterations25")
}
colnames(errort)

{
#png(file="C:/Users/pook/Desktop/S2_imputing.png", width=2250, height= 920, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/FigS2.png", width=2250, height= 920, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
both <- cols <- c(16,1,17,18)
values <- c(2,4,10,25)
par(mar=c(5.1,4.1,1.1,1.1))
plot(111110,-10, ylim=c(0.000, max(errort[,both]))*100, xlim=c(min(values), max(values)), log="x", xlab="nsamples", ylab="error rate in %")
for(chromo in 1:10){
  points(values, errort[chromo,cols]*100)
}
for(chromo in 1:10){
  lines(values, errort[chromo,cols]*100)
}
abline(v=4,lwd=2, col="red")
text(4.55,0.08, label="default", col="red", cex=1)

dev.off()
}

{
  errort <- matrix(nrow=3, ncol=18)
  row <- 1
  for(chromo in c(1,7,20)){
    index <- 1
    for(type in  c("ne10", "ne100",  "ne1000", "ne10000", "ne100000", "default",
                   "beagle5ne10", "beagle5ne30", "beagle5ne100", "beagle5ne300", "beagle5ne1000", "beagle5ne3000", "beagle5ne10000", 
                   "beagle5ne30000", "beagle5ne100000", "beagle5ne300000", "beagle5", "beagle4" )){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error/errorPosi", chromo, type, ".txt")
      err <- read.table(name)
      errort[row, index] <- mean(err[err[,1]!=0,1])
      index <- index +1
    }
    row <- row +1
  }
  
  
  colnames(errort) <- c("ne10", "ne100",  "ne1000", "ne10000", "ne100000", "default",
                        "beagle5ne10", "beagle5ne30", "beagle5ne100", "beagle5ne300", "beagle5ne1000", "beagle5ne3000", "beagle5ne10000", 
                        "beagle5ne30000", "beagle5ne100000", "beagle5ne300000", "beagle5", "beagle4" )
  colMeans(errort)
  
}

{
  errort <- matrix(nrow=3, ncol=16)
  row <- 1
  for(chromo in c(1,7,20)){
    index <- 1
    for(type in  c( "ne10", "ne100", "ne1000", "ne10000", "ne100000", "default",
                    "beagle5ne10", "beagle5ne30","beagle5ne100", "beagle5ne300", "beagle5ne1000", "beagle5ne3000", "beagle5ne10000", 
                    "beagle5ne100000", "beagle5", "beagle4" )){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error/errorPosi", chromo, type, "_frioni.txt")
      err <- read.table(name)
      errort[row, index] <- mean(err[err[,1]!=0,1])
      index <- index +1
    }
    row <- row +1
  }
  
  
  colnames(errort) <- c( "ne10", "ne100", "ne1000", "ne10000", "ne100000", "default",
                         "beagle5ne10", "beagle5ne30","beagle5ne100", "beagle5ne300", "beagle5ne1000", "beagle5ne3000", "beagle5ne10000", 
                         "beagle5ne100000", "beagle5", "beagle4" )
  colMeans(errort)
  
}

{
  errort <- matrix(nrow=3, ncol=16)
  row <- 1
  for(chromo in c(1,7,20)){
    index <- 1
    for(type in  c( "ne10", "ne100", "ne1000", "ne10000", "ne100000", "default",
                    "beagle5ne10", "beagle5ne30","beagle5ne100", "beagle5ne300", "beagle5ne1000", "beagle5ne3000", "beagle5ne10000", 
                    "beagle5ne100000", "beagle5", "beagle4" )){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error/errorPosi", chromo, type, ".txt")
      err <- read.table(name)
      errort[row, index] <- mean(err[err[,1]!=0,1])
      index <- index +1
    }
    row <- row +1
  }
  
  
  colnames(errort) <- c( "ne10", "ne100", "ne1000", "ne10000", "ne100000", "default",
                         "beagle5ne10", "beagle5ne30","beagle5ne100", "beagle5ne300", "beagle5ne1000", "beagle5ne3000", "beagle5ne10000", 
                         "beagle5ne100000", "beagle5", "beagle4" )
  colMeans(errort)
  
}




## PE PLOTS

{
  error1 <- NULL
  error2 <- NULL
  error3 <- NULL
  error4 <- NULL
  minor1 <- NULL
  details <- list()
  
  error1 <- error2 <- error3 <- error4 <- matrix(0L, nrow=410000, ncol=409)
  row <- 1
  snps <- NULL
  for(chromo in 1:10){
    print(chromo)
    load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiPE",chromo,"buildwindow25.RData"))
    #error1 <- rbind(error1,error)
    storage.mode(error) <- "integer"
    error1[row:(row+nrow(error)-1),] <- error 
    load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiPE",chromo,"default.RData"))
    #error2 <- rbind(error2, error)
    storage.mode(error) <- "integer"
    error2[row:(row+nrow(error)-1),] <- error 
    load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiPE",chromo,"modelscale15.RData"))
    #error3 <- rbind(error3, error)
    storage.mode(error) <- "integer"
    error3[row:(row+nrow(error)-1),] <- error 
    load(paste0("C:/Users/pook/Desktop/Imputing_error/errorPosiPE",chromo,"beagle5.RData"))
    #error4 <- rbind(error4, error)
    storage.mode(error) <- "integer"
    error4[row:(row+nrow(error)-1),] <- error 
    snps <- c(snps, nrow(error))
    row <- row + nrow(error)
    load(paste0("C:/Users/pook/Desktop/Full_allelfreq/PEchromo",chromo,"_detail.RData"))
    minor1 <- c(minor1,minor)
    for(index in 1:length(detail)){
      details[[length(details)+1]] <- detail[[index]]
    }
  }
  error1 <- error1[1:(row-1),]
  error2 <- error2[1:(row-1),]
  error3 <- error3[1:(row-1),]
  error4 <- error4[1:(row-1),]
  
  
  
  freqs <- sort(unique(c(minor1)))
  error_table <- cbind(minor1, 0, 0, 0,0,0,0,0,0,0)
  
  for(index in 1:nrow(error1)){
    pos <- length(details[[index]])
    error_table[index,2] <- pos
    error_table[index,3] <- sum(error1[index, details[[index]]])
    error_table[index,4] <- sum(error1[index, -details[[index]]])
    error_table[index,5] <- sum(error2[index, details[[index]]])
    error_table[index,6] <- sum(error2[index, -details[[index]]])
    error_table[index,7] <- sum(error3[index, details[[index]]])
    error_table[index,8] <- sum(error3[index, -details[[index]]])
    error_table[index,9] <- sum(error4[index, details[[index]]])
    error_table[index,10] <- sum(error4[index, -details[[index]]])
  }
  
  error_table[,c(3,5,7,9)] <- error_table[,c(3,5,7,9)] / error_table[,2] / 2
  error_table[,c(3,5,7,9)+1] <- error_table[,c(3,5,7,9)+1] / (ncol(error1) -error_table[,2]) / 2
  
  spline1 <- numeric(length(freqs)*2)
  spline2 <- numeric(length(freqs)*2)
  spline3 <- numeric(length(freqs)*2)
  spline4 <- numeric(length(freqs)*2)
  
  rows1 <- rowSums(error1)/ncol(error1)/2
  rows2 <- rowSums(error2)/ncol(error2)/2
  rows3 <- rowSums(error3)/ncol(error3)/2
  rows4 <- rowSums(error4)/ncol(error4)/2
  
  p <- length(freqs)*2+1
  for(index in 1:length(freqs)){
    rel <- which(error_table[,1]==freqs[index])
    spline1[index] <- mean(error_table[rel,3])
    spline2[index] <- mean(error_table[rel,5])
    spline3[index] <- mean(error_table[rel,7])
    spline4[index] <- mean(error_table[rel,9])
    spline1[p- index] <- mean(error_table[rel,4])
    spline2[p- index] <- mean(error_table[rel,6])
    spline3[p- index] <- mean(error_table[rel,8])
    spline4[p- index] <- mean(error_table[rel,10])
  } 
  
  
} # Pre-Computations

a <- ksmooth(c(error_table[,1], 1-error_table[,1]), c(error_table[,3], error_table[,4]), bandwidth = 0.02)
b <- ksmooth(c(error_table[,1], 1-error_table[,1]), c(error_table[,5], error_table[,6]), bandwidth = 0.02)
c <- ksmooth(c(error_table[,1], 1-error_table[,1]), c(error_table[,7], error_table[,8]), bandwidth = 0.02)
d <- ksmooth(c(error_table[,1], 1-error_table[,1]), c(error_table[,9], error_table[,10]), bandwidth = 0.02)

#png(file="C:/Users/pook/Desktop/FigS3_imputing.png", width=2250, height= 1360, res=300)
{
png(file="C:/Users/pook/Desktop/Plots_imputing/FigS5.png", width=2250, height= 1060, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(4.6,4.1,1.1,1.1))
plot(a$x, a$y *100, col="red", type="l", yaxt="n", log="y", lwd=2, xlab="allele frequency", ylab="error rate in %", ylim=c(min(a$y,b$y,c$y,d$y), max(a$y,b$y,c$y,d$y))*100)
lines(b$x, b$y*100, lwd=2)
lines(c$x, c$y*100, lwd=2, col="blue")
lines(d$x, d$y*100, lwd=2, col="green")
legend("topright", c("Beagle 4.1 default", "Beagle 4.0 & buildwindow = 25", "Beagle 4.1 & modelscale = 1.5", "Beagle 5.0 default"), lty=c(1,1,1,1), col=c(1,2,"blue","green"), cex=1,
       lwd=c(2,2,2,2))
axis(side=2, at=c(0.1,0.01,0.001,0.0001)*100)

dev.off()
}

a <- b <- c <- d <- list()
for(chromo in 1:10){
  a[[chromo]] <- ksmooth(cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo], 
                         rows1[cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo]], bandwidth = 3000)
  b[[chromo]] <- ksmooth(cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo], 
                         rows2[cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo]], bandwidth = 3000)
  c[[chromo]] <- ksmooth(cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo], 
                         rows3[cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo]], bandwidth = 3000)
  d[[chromo]] <- ksmooth(cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo], 
                         rows4[cumsum(c(1,snps))[chromo]:cumsum(snps)[chromo]], bandwidth = 3000)
}

{
#png(file="C:/Users/pook/Desktop/FigS4_imputing.png", width=2250, height= 1420, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/FigS6.png", width=2250, height= 1420, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))
plot(0,0, xaxt="n", type="l", xlim=c(0, sum(snps)+abstand*9), ylim=c(0, 0.021)*100, lwd=2, xlab="chromosome", ylab="error rate in %")
for(chromo in 1:10){
  lines(a1[[chromo]]$x,a1[[chromo]]$y*100, col="red")
  lines(b1[[chromo]]$x,b1[[chromo]]$y*100, lwd=2)
  lines(c1[[chromo]]$x,c1[[chromo]]$y*100, lwd=2, col="blue")
  lines(d1[[chromo]]$x,d1[[chromo]]$y*100, lwd=2, col="green") 
}



axis(side=1, at=cumsum(c(nsnp+abstand))-(nsnp+abstand)/2, labels=1:10, tick=FALSE)
axis(side=1, at=cumsum(c(nsnp+abstand))-abstand/2, labels=rep("", 10), tick=TRUE)
legend("topright", c("Beagle 4.1 default", "Beagle 4.0 & buildwindow = 25", "Beagle 4.1 & modelscale = 1.5", "Beagle 5.0 default"), lty=c(1,1,1,1), col=c(1,2,"blue","green"), cex=1,
       lwd=c(2,2,2,2), bg="white")


dev.off()
}

{
  race <- "PE"
  errort <- high <- low <- matrix(nrow=10, ncol=47)
  
  for(chromo in 1:10){
    index <- 1
    for(type in c("beagle4","buildwindow10","buildwindow25","buildwindow50","buildwindow100","buildwindow500","buildwindow2500",
                  "default","modelscale05","modelscale1","modelscale175","modelscale15","modelscale2","modelscale25","modelscale3","modelscale5","nsamples2","nsamples10","nsamples25",
                  "err000001", "ne1000", "ne5000", "ne10000", "beagle5",
                  "phasestates100", "phasestates500", "phasestates1000",
                  "phaseseg1", "phaseseg2", "phaseseg10", "phaseseg25",
                  "impseg2", "impseg4", "impseg10", "impseg20",
                  "impstates500", "impstates1000" ,"impstates3000", "impstates5000",
                  "window10", "window20", "window100", "window200",
                  "beagle5ne100", "beagle5ne1000", "beagle5ne10000", "beagle5ne100000")){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error/errorPosi", race, chromo, type, ".txt")
      err <- read.table(name)
      errort[chromo, index] <- mean(err[err[,1]!=0,1])
      high[chromo, index] <- mean(err[err[,1]!=0,1] / 2) + sd(err[err[,1]!=0,1]/2) * 1.96 / sqrt(100)
      low[chromo, index] <- mean(err[err[,1]!=0,1] /2 ) - sd(err[err[,1]!=0,1]/2) * 1.96 / sqrt(100)
      index <- index +1
    }
  }
  errort <- errort / 2

  
  
  colnames(errort) <- c("beagle4","buildwindow10","buildwindow25","buildwindow50","buildwindow100","buildwindow500","buildwindow2500",
                        "default","modelscale05","modelscale1","modelscale175","modelscale15","modelscale2","modelscale25","modelscale3","modelscale5","nsamples2","nsamples10","nsamples25",
                        "err000001", "ne1000", "ne5000", "ne10000", "beagle5",
                        "phasestates100", "phasestates500", "phasestates1000",
                        "phaseseg1", "phaseseg2", "phaseseg10", "phaseseg25",
                        "impseg2", "impseg4", "impseg10", "impseg20",
                        "impstates500", "impstates1000" ,"impstates3000", "impstates5000",
                        "window10", "window20", "window100", "window200",
                        "beagle5ne100", "beagle5ne1000", "beagle5ne10000", "beagle5ne100000")
}
colnames(errort)
colMeans(errort)

{
#png(file="C:/Users/pook/Desktop/FigS1_imputing.png", width=1250, height= 920, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/FigS3.png", width=1250, height= 920, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)

par(mar=c(4.2,9.1,1.1,1.1))
par(mfrow=c(1,1))
b4 <- c(1,3,19,8,12,24,43)
xlims <- c(0,max(colMeans(errort)[c(b4)])+0.0001)*100
barplot(colMeans(errort)[b4][7:1]*100, horiz=TRUE, names.arg=c("BEAGLE 4.0 default", "buildwindow = 25", "nsamples = 25",
                                                           "BEAGLE 4.1 default", "modelscale = 1.5",
                                                           "BEAGLE 5.0 default", "window = 200"
                                                           )[7:1], las=1, cex.names=1,
        main="",xlim=xlims, xlab="error rate in %")

for(index in 1:length(b4)){
  lines( c(colMeans(low)[b4[7:1][index]], colMeans(high)[b4[7:1][index]])*100, c(index*1.2,index*1.2) -0.5)
  lines(c(colMeans(low)[b4[7:1][index]], colMeans(low)[b4[7:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
  lines(c(colMeans(high)[b4[7:1][index]], colMeans(high)[b4[7:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
}

dev.off()
}

{
  race <- "PE"
  errort <- high <- low <- matrix(nrow=10, ncol=33)
  for(chromo in 1:10){
    index <- 1
    for(type in  c("beagle4", "default", "beagle5" ,
                   "buildwindow10","buildwindow25", "buildwindow50","buildwindow100","buildwindow500","buildwindow2500","burnits25","imputeits25","modelscale125","modelscale15","modelscale175","modelscale2","nsample2","nsample10","nsample25","phaseits25", "burnits25", "imputeits25",
                   "phaseseg2", "phaseseg10", "phasestates100","phasestates500","phasestates1000","modelscale1niterations25", "buildwindow50nsamples25allits25", "burnin25", "burnin2", "iterations2", "iterations25", "modelscale1")){
      name <- paste0("C:/Users/pook/Desktop/Imputing_error_S0/errorPosi", race, chromo, type,".txt")
      err <- read.table(name)
      errort[chromo, index] <- mean(err[err[,1]!=0,1])
      high[chromo, index] <- mean(err[err[,1]!=0,1]) + sd(err[err[,1]!=0,1]) * 1.96 / sqrt(50)
      low[chromo, index] <- mean(err[err[,1]!=0,1]) - sd(err[err[,1]!=0,1]) * 1.96 / sqrt(50)
      index <- index +1
    }
  }
  
  
  colnames(errort) <- c("beagle4", "default", "beagle5" ,
                        "buildwindow10","buildwindow25", "buildwindow50","buildwindow100","buildwindow500","buildwindow2500","burnits25","imputeits25","modelscale125","modelscale15","modelscale175","modelscale2","nsample2","nsample10","nsample25","phaseits25", "burnits25", "imputeits25",
                        "phaseseg2", "phaseseg10", "phasestates100","phasestates500","phasestates1000","modelscale1niterations25", "buildwindow50nsamples25allits25", "burnin25", "burnin2", "iterations2", "iterations25", "modelscale1")
  colMeans(errort)
  
}

{
#png(file="C:/Users/pook/Desktop/FigS2_imputing.png", width=1250, height= 2220, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/FigS4.png", width=1250, height= 2220, res=300)
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(4.2,9.1,1.7,1.1))

par(mfrow=c(3,1))
b4 <- c(1, 6, 19:21,28)
b41 <- c(2,33,2,27)
b5 <- c(3,23,26,29,32)

xlims <- c(0,max(colMeans(errort)[c(b4,b41,b5)])+0.0001) * 100
barplot(colMeans(errort)[b4][6:1]*100, horiz=TRUE, names.arg=c("Default", "buildwindow = 50", "nsamples = 25","phase-its = 25", "burnin-its = 25", "all adapted")[6:1], las=1, cex.names=1,
        main="Parameter adaptation BEAGLE 4.0",xlim=xlims)
for(index in 1:length(b4)){
  lines( c(colMeans(low)[b4[6:1][index]], colMeans(high)[b4[6:1][index]])*100, c(index*1.2,index*1.2) -0.5)
  lines(c(colMeans(low)[b4[6:1][index]], colMeans(low)[b4[6:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
  lines(c(colMeans(high)[b4[6:1][index]], colMeans(high)[b4[6:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
}

barplot(colMeans(errort)[b41][4:1]*100, horiz=TRUE, names.arg=c("Default", "modelscale = 1.0", "niterations = 25","all adapted")[4:1], las=1, cex.names=1,
        main="Parameter adaptation BEAGLE 4.1",xlim=xlims)
for(index in 1:length(b41)){
  lines( c(colMeans(low)[b41[4:1][index]], colMeans(high)[b41[4:1][index]])*100, c(index*1.2,index*1.2) -0.5)
  lines(c(colMeans(low)[b41[4:1][index]], colMeans(low)[b41[4:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
  lines(c(colMeans(high)[b41[4:1][index]], colMeans(high)[b41[4:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
}


barplot(colMeans(errort)[b5][5:1]*100, horiz=TRUE, names.arg=c("Default", "phase-segments = 10", "phase-states = 1'000","burn-in = 25", "iterations = 25")[5:1], las=1, cex.names=1,
        main="Parameter adaptation BEAGLE 5.0",xlim=xlims, xlab="error rate in %")
for(index in 1:length(b5)){
  lines( c(colMeans(low)[b5[5:1][index]], colMeans(high)[b5[5:1][index]])*100, c(index*1.2,index*1.2) -0.5)
  lines(c(colMeans(low)[b5[5:1][index]], colMeans(low)[b5[5:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
  lines(c(colMeans(high)[b5[5:1][index]], colMeans(high)[b5[5:1][index]])*100, c(index*1.2,index*1.2) -0.5 + c(-0.2,0.2))
}






dev.off()
}

## Computation times


{
#png(file="C:/Users/pook/Desktop/Fig11_imputing.png", width=1250, height= 1520, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig11.png", width=1250, height= 1520, res=300)

beagle4 <- c(14+43/60, 12+42/60, 14+38/60, 13+46/60, 13+45/60)
beagle4b50 <- c(11+54/60, 12+47/60, 10+13/60, 11+3/60, 11+ 29/60)
beagle4s25 <- c(45+14/60, 47+45/60, 46+23/60, 43+20/60, 46+5/60)
beagle4s2 <- c(10+23/60, 10+56/60, 10 + 49/60, 10 +56/60, 12+21/60 )
beagle41 <- c(55+17/60, 59+6/60, 68, 73 + 41/60, 62+40/60)
beagle41m15 <- c(35+59/60, 29+39/60, 34+42/60, 39+45/60,39+7/60)
beagle5 <- c(4+55/60, 4+37/60, 4+22/60, 4 + 28/60, 4+55/60)
beagle5w <- c(66+28/60, 53+42/60, 62+9/60, 45+42/60, 50+49/60)

a <- cbind(beagle4, beagle4b50, beagle4s2,beagle4s25, beagle41, beagle41m15, beagle5, beagle5w)

par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(4.1,9.1,1.1,1.1))
par(mfrow=c(2,1))

barplot(colMeans(a)[8:1], horiz=TRUE, names.arg=c("BEAGLE 4.0 default", "buildwindow = 50", "nsamples = 2","nsamples = 25", 
                                             "BEAGLE 4.1 default", "modelscale = 1.5", "BEAGLE 5.0 default", "window = 200")[8:1], las=1, cex.names=1,
        main="", xlab="computation time in minutes")
text(61.5,0.5, label="A", cex=1.3)

beagle4 <- c(1+42/60, 1+50/60, 2+0/60, 1+52/60, 1+39/60)
beagle4b50 <- c(1+5/60, 1+14/60, 1+14/60, 1+11/60, 1+ 14/60)
beagle41 <- c(43, 42, 45, 42, 43)/60
beagle41m15 <- c(37, 53, 45, 33,42)/60
beagle5 <- c(25, 27, 22, 19, 28)/60
beagle5ne <- c(20, 20, 18, 15, 17)/60

a <- cbind(beagle4, beagle4b50, beagle41, beagle41m15, beagle5, beagle5ne)

barplot(colMeans(a)[6:1]*60, horiz=TRUE, names.arg=c("BEAGLE 4.0 default", "buildwindow = 50", 
                                                  "BEAGLE 4.1 default", "ne = 1'000 (4.1)", "BEAGLE 5.0 default", "ne = 1'000 (5.0)")[6:1], las=1, cex.names=1,
        main="", xlab="computation time in seconds")
text(105,0.5, label="B", cex=1.3)
dev.off()
}

png(file="C:/Users/pook/Desktop/Fig7_imputing.png", width=2250, height= 920, res=300)
par(mfrow=c(1,2))
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))
test <- NULL
for(chromo in c(1,7,20)){
  for(sub in 1:10){
    error_rate <- NULL
    error_rate1 <- NULL
    load(paste0("C:/Users/pook/Desktop/Subgroup_Imputing/error_rates_sub", sub, "chromo", chromo, ".RData"))
    if(length(error_rate)>0){
      test <- rbind(test, error_rate)
    } else if(length(error_rate1)>0){
      test <- rbind(test, error_rate1)
    } else{
      error()
    }
    
  }
}


plot(test[,1]*100, test[,2]*100, xlab="only same subgroup", ylab="full dataset", pch=4)
abline(a=0,b=1)
points(test[1:10,1]*100, test[1:10,2]*100, col="red",pch=4)
points(test[11:20,1]*100, test[11:20,2]*100, col="green", pch=4)
legend("topleft", c("Chromosome 1", "Chromosome 7", "Chromosome 20"), lty=c(0,0,0), pch=c(4,4,4), col=c("red","green","black"), cex=0.8,
       lwd=c(2,2))

plot(test[,4]*100, test[,2]*100, xlab="selected subgroups", ylab="full dataset", pch=4)
abline(a=0,b=1)
points(test[1:10,4]*100, test[1:10,2]*100, col="red", pch=4)
points(test[11:20,4]*100, test[11:20,2]*100, col="green", pch=4)

dev.off()

{
#png(file="C:/Users/pook/Desktop/Fig8_imputing.png", width=2250, height= 1360, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig9.png", width=2250, height= 1360, res=300)
load("C:/Users/pook/Desktop/ClusterChickenPopbasisNeiDist.RData")
par(mfrow=c(1,1))
plot(142120,0, xlim=c(0, max(dist_clusters$`10`)), ylim=c(-0.005,0.009)*100, xlab="Nei distance to study sample", ylab="effect on error rate in %")
x <- NULL
y <- NULL
m <- NULL
for(sub in (1:30)){
  #for(sub in (1:30)[-c(6,16,26)]){
  run <- 1 + as.numeric(sub>10)+as.numeric(sub>20)
  class <- (sub-1)%%10+1
  diff <- test[sub,8:16] - test[sub,1]
  dist <- dist_clusters$`10`[class,(1:10)[-class]]
  if(class==6){
    points(dist,diff*100,pch=2, col=rainbow(11)[class], cex=1)
  } else{
    points(dist,diff*100,pch=4, col=rainbow(11)[class], cex=1)
  }
  
  z <- diff*100
  sub <- lm(z~dist)
  #  abline(a=sub$coefficients[1], b=sub$coefficients[2])
  m <- c(m, sub$coefficients[2])

  if(class!=6){
    x <- c(x, dist)
    y <- c(y, z)
  }
  
}

model <- lm(y~x)
abline(a=model$coefficients[1], b=model$coefficients[2], lwd=2, col="red")
dev.off()
}


png(file="C:/Users/pook/Desktop/Fig7b_imputing.png", width=2250, height= 920, res=300)
par(mfrow=c(1,2))
par(ps = 12, cex = 1, cex.main = 1, cex.lab=1, cex.axis=1)
par(mar=c(5.1,4.1,1.1,1.1))
test <- NULL
for(chromo in c(1,7,20)){
  for(sub in (1:10)[-6]){
    error_rate <- NULL
    error_rate1 <- NULL
    load(paste0("C:/Users/pook/Desktop/Subgroup_Imputing/error_rates_sub", sub, "chromo", chromo, ".RData"))
    if(length(error_rate)>0){
      test <- rbind(test, error_rate)
    } else if(length(error_rate1)>0){
      test <- rbind(test, error_rate1)
    } else{
      error()
    }
    
  }
}
plot(test[,1], test[,2], xlab="only same subgroup", ylab="full dataset", pch=4)
abline(a=0,b=1)
points(test[1:9,1], test[1:9,2], col="red",pch=4)
points(test[10:18,1], test[10:18,2], col="green", pch=4)
legend("topleft", c("Chromosome 1", "Chromosome 7", "Chromosome 20"), lty=c(0,0,0), pch=c(4,4,4), col=c("red","green","black"), cex=0.8,
       lwd=c(2,2))

plot(test[,4], test[,2], xlab="selected subgroups", ylab="full dataset", pch=4)
abline(a=0,b=1)
points(test[1:9,4], test[1:9,2], col="red", pch=4)
points(test[10:18,4], test[10:18,2], col="green", pch=4)

dev.off()


avg_p <- (test[1:10,] + test[11:20,] + test[21:30,]) / 3

s1_table <- avg_p[,c(1,2,4,6)]
row.names(s1_table) <- paste0("Subpopulation_", 1:10)
colnames(s1_table) <- c("Same subpopulation", "all samples", "< avg. Nei distance", "improvement in single landrace comp.")

s1_table <- round(s1_table, digits=5)
write.csv(file="C:/Users/pook/Desktop/S2_Table.csv", s1_table)

s2_table <- avg_p[,8:16] - avg_p[,1]
s2_table <- cbind(0, s2_table)
for(index in 2:10){
  for(index2 in 1:(index-1)){
    s2_table[index,index2] <- s2_table[index, index2+1]
  }
}
diag(s2_table) <- 0

row.names(s2_table) <- paste0("Subpopulation_", 1:10)
colnames(s2_table) <- paste0("Subpopulation_", 1:10)


s2_table <- round(s2_table, digits=5)

write.csv(file="C:/Users/pook/Desktop/S1_Table.csv", s2_table)

plot(s1_table[1,], ylim=c(0,0.1), type="l")
for(index in 2:10){
  lines(s1_table[index,])
}
{
#png(file="C:/Users/pook/Desktop/Fig13_imputing.png", width=1550, height= 1950, res=300)
png(file="C:/Users/pook/Desktop/Plots_imputing/Fig10.png", width=1550, height= 1950, res=300)

plot(s1_table[,1]*100, pch=1, ylab="error rate in %", ylim=c(0.01,0.2)*100, xlab="imputed subpopulation", log = "y", cex=1,lwd=2 )
points(s1_table[,2]*100, col="red", pch=2, cex=1, lwd=2)
points(s1_table[,3]*100, col="blue", pch=3, cex=1, lwd=2)
points(s1_table[,4]*100, col="green", pch=4, cex=1, lwd=2)
Map(axis, side=1, at=1:10, col.axis=rainbow(11)[1:10], labels=1:10, lwd=0, las=1)
axis(1,at=1:10,labels=FALSE)
legend("topleft", c("same subpopulation", "all subpopulation", "< avg. Nei distant subpopulations", "improvement in single subpopulation comp."), pch=c(1,2,3,4),col=c("black", "red", "blue", "green"))

dev.off()
}

png(file="C:/Users/pook/Desktop/S3_imputing.png", width=1550, height= 1950, res=300)
load("C:/Users/pook/Desktop/ClusterChickenPopbasisNeiDist.RData")
par(mfrow=c(5,2))
par(mar=c(5.1,4.1,1.1,1.1))
x <- NULL
y <- NULL
m <- NULL
rs <- NULL
for(index in 1:10){
  for(chromo in c(1,7,20)){
    sub <- index + as.numeric(chromo==7)*10 + as.numeric(chromo==20)*20
    class <- (sub-1)%%10+1
    diff <- test[sub,6:14] - test[sub,1]
    dist <- dist_clusters$`10`[class,(1:10)[-class]]
    if(chromo==1){
      plot(dist,diff, pch=1, ylim=c(-0.01,0.01), xlim=c(0,max(dist_clusters$`10`)))
    } else{
      points(dist,diff,pch=1)
    }
    
    
    x <- c(x, dist)
    y <- c(y, diff)
    if(chromo==20){
      model <- lm(y[(length(x)-26):length(x)]~x[(length(x)-26):length(x)])
      abline(a=model$coefficients[1], b=model$coefficients[2])
      m <- c(m, model$coefficients[2])
      rs <- c(rs, summary(model)$r.squared)
    }
    
  }
  
}
dev.off()


load("C:/Users/pook/Desktop/LD_decay_bp.RData")
load("c:/Users/pook/Desktop/LD_decay.RData")
ld <- seq <- c(1, 1:20*10, 1:10*50 + 200)
png(file="C:/Users/pook/Desktop/Fig9c_imputing.png", width=2250, height= 1160, res=300)
par(mfrow=c(1,2))
par(mar=c(5.1,4.1,1.1,0.1))
plot(ksmooth(dist_breeding/1000,ld_breeding, bandwidth=50), xlim=c(0,1500), ylim=c(0, max(ld_decay_maize)),type="l", col="darkgreen", lwd=2, xlab="distance (in kb)", ylab=expression(r^2))
lines(ksmooth(dist_maize/1000,ld_maize, bandwidth=50), type="l", col="red", lwd=2)
lines(ksmooth(dist_diversity/1000,ld_diversity, bandwidth=50), type="l", col="blue", lwd=2)
text(1500,0.59, label="A", cex=1.3)

par(mar=c(5.1,3.1,1.1,1.1))
plot(ld, ld_decay_maize, col="red",type="l", ylim=c(0, max(ld_decay_maize)), xlab="distance (in SNP)", ylab="", lwd=2)
lines(ld, ld_decay_lohman, col="darkgreen", lwd=2)
lines(ld, ld_decay_diversity, col="blue", lwd=2)
legend("topright", c("maize-DH", "chicken-commercial", "chicken-diversity"), lty=c(1,1,1), lwd=c(2,2,2),
       col=c("red", "darkgreen", "blue"))
text(700,0.59, label="B", cex=1.3)
dev.off()
