# Experimental GBLUP
args <- commandArgs(TRUE)
#args <- c(10,0.8,"KE&PE_joined", 10)

print(args)
iter1 <- as.numeric(args[1])

set.seed(iter1)

load("Genetic_Datasets/Batch3_KEPE/KE_DH_SNP_2.RData")
data_pruned <- datas
load("Genetic_Datasets/Batch3_KEPE/PE_DH_SNP_2.RData")
data_pruned <- cbind(data_pruned,datas)

load("Genetic_Datasets/Batch3_KEPE/KE_DH_SNP.RData")
data_full <- datas
load("Genetic_Datasets/Batch3_KEPE/PE_DH_SNP.RData")
data_full <- cbind(data_full,datas)

load("Genetic_Datasets/Batch3_KEPE/Joint_DH_Block.Data")


pheno <- read.table("MAZE_BLUEs_acrossLocations_DHperse2017_v1.csv", sep=";")
pheno <- as.matrix(pheno)[-1,]
relevant_dh <- duplicated(c(pheno[,1],colnames(data_full)))[-(1:nrow(pheno))]
relevant_pheno <- duplicated(c(colnames(data_full), pheno[,1]))[-(1:ncol(data_full))]
pheno <- pheno[relevant_pheno,]

#data_pruned <- data_pruned[,relevant_dh]
data_full <- data_full[,relevant_dh]
data_block <- data_block[,relevant_dh]*2

library(miraculix)
G_full <- relationshipMatrix(createSNPmatrix(data_full), centered=TRUE, normalized=TRUE)
G_pruned <- relationshipMatrix(createSNPmatrix(data_pruned), centered=TRUE, normalized=TRUE)
G_block <- relationshipMatrix(createSNPmatrix(data_block), centered=TRUE, normalized=TRUE)

iter <- 10

training_cor <- test_cor <- matrix(0, nrow=3*9, ncol=iter)

library(sommer)
for(index in 1:iter){
  for(nr in 1:9){
    print(index)
    print(nr)
    y_real <- y_training <- as.numeric(pheno[,nr+1])
    training <- sample(1:471, 471*0.8)
    test <- 472:873
    y_training[-training] <- NA
    Z1 <- diag(length(y_real))

    ETA <- list( add=list(Z=Z1, K=G_full))
    ans <- MEMMA(Y=y_training, Z=ETA)
    training_cor[3*nr-2,index] <- cor(ans$fitted.y[training], y_real[training], use="pairwise.complete.obs")
    test_cor[3*nr-2,index] <- cor(ans$fitted.y[test], y_real[test], use="pairwise.complete.obs")

    ETA <- list( add=list(Z=Z1, K=G_pruned))
    ans <- MEMMA(Y=y_training, Z=ETA)
    training_cor[3*nr-1,index] <- cor(ans$fitted.y[training], y_real[training], use="pairwise.complete.obs")
    test_cor[3*nr-1,index] <- cor(ans$fitted.y[test], y_real[test], use="pairwise.complete.obs")

    ETA <- list( add=list(Z=Z1, K=G_block))
    ans <- MEMMA(Y=y_training, Z=ETA)
    training_cor[3*nr,index] <- cor(ans$fitted.y[training], y_real[training], use="pairwise.complete.obs")
    test_cor[3*nr,index] <- cor(ans$fitted.y[test], y_real[test], use="pairwise.complete.obs")

    save(file=paste0("Block_GP_24_04_19/file", iter1, "_crossKEPE.RData"), list=c("training_cor", "test_cor"))
  }
}


training_cor <- test_cor <- matrix(0, nrow=3*9, ncol=iter)

library(sommer)
for(index in 1:iter){
  for(nr in 1:9){
    print(index)
    print(nr)
    y_real <- y_training <- as.numeric(pheno[,nr+1])
    training <- sample(472:873, 402*0.8)
    test <- 1:471
    y_training[-training] <- NA
    Z1 <- diag(length(y_real))

    ETA <- list( add=list(Z=Z1, K=G_full))
    ans <- MEMMA(Y=y_training, Z=ETA)
    training_cor[3*nr-2,index] <- cor(ans$fitted.y[training], y_real[training], use="pairwise.complete.obs")
    test_cor[3*nr-2,index] <- cor(ans$fitted.y[test], y_real[test], use="pairwise.complete.obs")

    ETA <- list( add=list(Z=Z1, K=G_pruned))
    ans <- MEMMA(Y=y_training, Z=ETA)
    training_cor[3*nr-1,index] <- cor(ans$fitted.y[training], y_real[training], use="pairwise.complete.obs")
    test_cor[3*nr-1,index] <- cor(ans$fitted.y[test], y_real[test], use="pairwise.complete.obs")

    ETA <- list( add=list(Z=Z1, K=G_block))
    ans <- MEMMA(Y=y_training, Z=ETA)
    training_cor[3*nr,index] <- cor(ans$fitted.y[training], y_real[training], use="pairwise.complete.obs")
    test_cor[3*nr,index] <- cor(ans$fitted.y[test], y_real[test], use="pairwise.complete.obs")

    save(file=paste0("Block_GP_24_04_19/file", iter1, "_crossPEKE.RData"), list=c("training_cor", "test_cor"))
  }
}




'#
library(HaploBlocker)
data_block <- NULL
data_block_length <- NULL
for(chromo in 1:10){
load(paste0("Genetic_Datasets/Batch3_KEPE/KE_DH_chromo", chromo, ".RData"))
blocklist <- block_calculation(data)
block_data <- block_matrix_construction(blocklist)
se <- blocklist_startend(blocklist)
block_length <- se[,2] - se[,1]

data_block <- rbind(data_block, block_data)
data_block_length <- c(data_block_length, block_length)
}

save(file="Genetic_Datasets/Batch3_KEPE/KE_DH_Block.Data", list=c("data_block", "data_block_length"))

library(HaploBlocker)
data_block <- NULL
data_block_length <- NULL
for(chromo in 1:10){

load(paste0("Genetic_Datasets/Batch3_KEPE/KE_DH_chromo", chromo, ".RData"))
data1 <- data
load(paste0("Genetic_Datasets/Batch3_KEPE/PE_DH_chromo", chromo, ".RData"))
data1 <- cbind(data1, data)
blocklist <- block_calculation(data1, min_per_sub)
block_data <- block_matrix_construction(blocklist)
se <- blocklist_startend(blocklist)
block_length <- se[,2] - se[,1]

data_block <- rbind(data_block, block_data)
data_block_length <- c(data_block_length, block_length)
}

save(file="Genetic_Datasets/Batch3_KEPE/KE_DH_Block.Data", list=c("data_block", "data_block_length"))




library(HaploBlocker)
data_block <- NULL
data_block_length <- NULL
for(chromo in 1:10){

load(paste0("Genetic_Datasets/Batch3_KEPE/KE_DH_chromo", chromo, ".RData"))
data1 <- data
load(paste0("Genetic_Datasets/Batch3_KEPE/PE_DH_chromo", chromo, ".RData"))
data1 <- cbind(data1, data)
blocklist <- block_calculation(data1, min_per_subgroup = 5, subgroups = list(1:501, 502:910))
block_data <- block_matrix_construction(blocklist)
se <- blocklist_startend(blocklist)
block_length <- se[,2] - se[,1]

data_block <- rbind(data_block, block_data)
data_block_length <- c(data_block_length, block_length)
}

save(file="Genetic_Datasets/Batch3_KEPE/Joint_DH_Block.Data", list=c("data_block", "data_block_length"))

'#
