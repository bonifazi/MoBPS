breeding.size=breeding.size;
selection.size= selection.size;
heritability = heritability;
sigma.e.database = cbind(1;(1:2)[population$info$size[1,]>0]);
new.bv.child="obs";
selection.m = if(sum(nodes[[groupnr]]$selection_ratio==1)==2){"random"} else{"function"};
add.gen = generation;
bve.database = bve.database;
selection.m.cohorts = cohorts.m;
selection.f.cohorts = cohorts.f;
n.observation = pheno_index[which(pheno_index_name==nodes[[groupnr]]$'Phenotyping Class'),];
new.class = new_mig[sex];
same.sex.activ = same.sex.activ;
same.sex.sex = same.sex.sex;
same.sex.selfing = FALSE;
name.cohort = nodes[[groupnr]]$id;
time.point = time.point;
creating.type = 2;
store.breeding.totals = TRUE;
display.progress=progress.bars;
share.genotyped = share.genotyped;
added.genotyped = nodes[[groupnr]]$`Proportion of added genotypes`;
ogc = nodes[[groupnr]]$OGC;
ogc_cAc = if(length(nodes[[groupnr]]$ogc_cAc)>0){nodes[[groupnr]]$ogc_cAc} else{NA};
repeat.mating = nodes[[groupnr]]$repeat_mating;
max.offspring = nodes[[groupnr]]$max_offspring;
best.selection.ratio.m = nodes[[groupnr]]$selection_ratio[1];
best.selection.ratio.f = nodes[[groupnr]]$selection_ratio[2];
best.selection.criteria.m = "bv";
best.selection.criteria.f = "bv";
multiple.bve.weights.m = selection_index[max(1,which(selection_index_name==nodes[[groupnr]]$selection_ratio_index[1])),];
multiple.bve.weights.f = selection_index[max(1,which(selection_index_name==nodes[[groupnr]]$selection_ratio_index[2])),];
multiple.bve.scale.m = selection_index_miesenberger_wscaling[max(1,which(selection_index_name==nodes[[groupnr]]$selection_ratio_index[1]))];
multiple.bve.scale.f = selection_index_miesenberger_wscaling[max(1,which(selection_index_name==nodes[[groupnr]]$selection_ratio_index[2]))];
verbose=verbose
