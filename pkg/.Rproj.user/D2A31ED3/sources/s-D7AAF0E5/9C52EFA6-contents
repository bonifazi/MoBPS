breeding.size=breeding.size;
bve=bve; computation.A = computeA;
offspring.bve.parents.database=offspring.bve.parents.database;
BGLR.bve = activbglr;
emmreml.bve = activemmreml;
rrblup.bve = activerrblup;
sommer.bve = activesommer;
sommer.multi.bve = activemultisommer;
selection.size= breeding.size;
copy.individual = TRUE;
added.genotyped = nodes[[groupnr]]$`Proportion of added genotypes`;
max.offspring = c(1,1);
heritability = heritability;
sigma.e.database = cbind(1,(1:2)[population$info$size[1,]>0]);
new.bv.child="addobs";
selection.m = selection;
selection.f = selection;
phenotype.bv = phenotype.bv;
add.gen = generation;
bve.database = bve.database;
selfing.mating=TRUE;
selfing.sex=(sex-1);
selection.m.cohorts = cohorts.m;
selection.f.cohorts = cohorts.f;
new.class = new_mig[sex];
multiple.bve.scale.m = selection_index_scaling[which(selection_index_name==nodes[[groupnr]]$'Selection Index')];
multiple.bve.weights.m = selection_index[which(selection_index_name==nodes[[groupnr]]$'Selection Index'),];
selection.m.miesenberger = selection_index_miesenberger[which(selection_index_name==nodes[[groupnr]]$'Selection Index')];
selection.miesenberger.w = selection_index_miesenberger_wscaling[which(selection_index_name==nodes[[groupnr]]$'Selection Index')];
n.observation = add.observation;
remove.effect.position = remove.effect.position;
name.cohort = nodes[[groupnr]]$label;
time.point = time.point;
creating.type = creating.type;
depth.pedigree = depth;
store.breeding.totals = TRUE;
reduced.selection.panel.m = reduced.selection.panel.m;
reduced.selection.panel.f = reduced.selection.panel.f;
bve.cohorts = c(cohorts.m, cohorts.f);
bve.insert.cohorts = c(cohorts.m, cohorts.f);
display.progress=progress.bars;
singlestep.active=singlestep.active;
share.genotyped = share.genotyped