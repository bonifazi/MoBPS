# Experimental GBLUP
args <- commandArgs(TRUE)
#args <- c(10,0.8,"KE&PE_joined", 10)
pheno_nr <- as.numeric(args[1])
included <- as.numeric(args[2])
land <- args[3]
iter <- as.numeric(args[4])

if(land=="KE_PE"){
  land <- "KE&PE"
}
if(land=="KE_PE_joined"){
  land <- "KE&PE_joined"
}
if(land=="PE_KE"){
  land <- "PE&KE"
}
if(land=="PE_KE_joined"){
  land <- "PE&KE_joined"
}

if(land=="KE&PE" || land=="PE&KE"){
  name1 <- "MAZE_HaploBlocker2/KE&PE_blockset_ArminSet.RData"
  load(name1)
} else if(land=="KE&PE_joined" || land=="PE&KE_joined"){
  name1 <- "MAZE_HaploBlocker2/KE&PE_overlap_blockset_ArminSet.RData"
  load(name1)
} else{
  name1 <- paste0("MAZE_HaploBlocker2/",land,"_blockset_ArminSet.RData")
  load(name1)
}


library(BGLR)
library(miraculix)
library(RandomFieldsUtils)

pheno <- read.table("MAZE_BLUEs_acrossLocations_DHperse2017_v1.csv", sep=";")
pheno <- as.matrix(pheno)

relevant_dh <- duplicated(c(pheno[,1],colnames(dataset)))[-(1:nrow(pheno))]
dataset <- dataset[,relevant_dh]

relevant_pheno <- duplicated(c(colnames(dataset),pheno[,1]))[-(1:ncol(dataset))]
pheno <- pheno[relevant_pheno,]

dataset <- dataset[,sort(colnames(dataset), index.return=TRUE)$ix]
pheno <- pheno[sort(pheno[,1], index.return=TRUE)$ix,]


if(max(dataset)==1){
  Zt <- dataset*2
} else{
  Zt <- dataset
}
storage.mode(Zt) <- "integer"
Z_code <- createSNPmatrix(Zt)
A <- relationshipMatrix(Z_code, TRUE, TRUE)

#p_i <- rowSums(Zt)/ncol(Zt)/2
#Ztm <- Zt - p_i * 2
#A <- crossprod(Ztm)/ (2 * sum(p_i*(1-p_i)))

ETA <- list(list(K=A, model='RKHS'))

training_cor <- numeric(iter)
test_cor <- numeric(iter)
for(index in 1:iter){
  print(index)
  y <- y_na <- as.numeric(pheno[,pheno_nr])
  if(land=="KE&PE" || land=="KE&PE_joined"){
    sub <- sample(1:471, 471*included)
  } else if(land=="PE&KE" || land=="PE&KE_joined"){
    sub <- sample(472:873, 402*included)
  } else{
    sub <- sample(1:ncol(dataset), ncol(dataset)*included)
  }

  y_na[-sub] <- NA
  model <- BGLR(y=y_na, verbose=FALSE, nIter=5000, burnIn=1000, ETA=ETA,
                saveAt=paste0("Trash/",pheno_nr,land))
  training_cor[index] <- cor(y[sub],model$yHat[sub])
  if(land=="KE" || land=="PE"){
    test_cor[index] <- cor(y[-sub],model$yHat[-sub], use="pairwise.complete.obs")
  } else if(land=="KE&PE" || land=="KE&PE_joined"){
    test_cor[index] <- cor(y[-(1:471)],model$yHat[-(1:471)], use="pairwise.complete.obs")
  } else{
    test_cor[index] <- cor(y[-(472:873)],model$yHat[-(472:873)], use="pairwise.complete.obs")
  }

}


name1 <- paste0("GBLUP_block_21_02/", land, "Pheno", pheno_nr, "included", included, "_BLOCK_ArminSet.RData")
save(file=name1, list=c("training_cor", "test_cor"))




