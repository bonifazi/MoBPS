# Experimental GBLUP
args <- commandArgs(TRUE)
#args <- c(10,0.8,"KE&PE_joined", 10)

iter1 <- as.numeric(args[1])

set.seed(iter1)

load("Genetic_Datasets/Batch3_KEPE/PE_DH_SNP.RData")
data_full <- datas
load("Genetic_Datasets/Batch3_KEPE/PE_DH_Block.Data")


pheno <- read.table("MAZE_BLUEs_acrossLocations_DHperse2017_v1.csv", sep=";")
pheno <- as.matrix(pheno)[-1,]
relevant_dh <- duplicated(c(pheno[,1],colnames(data_full)))[-(1:nrow(pheno))]
relevant_pheno <- duplicated(c(colnames(data_full), pheno[,1]))[-(1:ncol(data_full))]
pheno <- pheno[relevant_pheno,]


data_block <- data_block[,relevant_dh]*2

s <- seq(-0.5,1.5,by=0.1)
iter <- 2

training_cor <- test_cor <- matrix(0, nrow=length(s)*9, ncol=iter)

G <- list()
for(index in 1:length(s)){
  p_i <- rowSums(data_block)/ncol(data_block)/2
  data_blockm <- data_block - p_i * 2
  G[[index]] <- t(data_blockm) %*% diag(data_block_length^s[index]) %*% data_blockm / (2 * sum(data_block_length^s[index]*p_i*(1-p_i)))
}

library(sommer)
for(index in 1:iter){
  for(nr in 1:9){
    y_real <- y_training <- as.numeric(pheno[1:402,nr+1])
    training <- sample(1:ncol(data_block), ncol(data_block)*0.8)
    test <- (1:ncol(data_block))[-training]
    y_training[test] <- NA
    Z1 <- diag(length(y_real))
    for(index2 in 1:length(s)){
      print(index2)
      ETA <- list( add=list(Z=Z1, K=G[[index2]]))
      ans <- MEMMA(Y=y_training, Z=ETA)
      training_cor[length(s)*nr-index2,index] <- cor(ans$fitted.y[training], y_real[training], use="pairwise.complete.obs")
      test_cor[length(s)*nr-index2,index] <- cor(ans$fitted.y[test], y_real[test], use="pairwise.complete.obs")
    }

    save(file=paste0("Block_GP_24_04_19/file", iter1, "_weighted_PE.RData"), list=c("training_cor", "test_cor"))
  }
}




'#
library(HaploBlocker)
data_block <- NULL
data_block_length <- NULL
for(chromo in 1:10){
load(paste0("Genetic_Datasets/Batch3_KEPE/PE_DH_chromo", chromo, ".RData"))
blocklist <- block_calculation(data)
block_data <- block_matrix_construction(blocklist)
se <- blocklist_startend(blocklist)
block_length <- se[,2] - se[,1]

data_block <- rbind(data_block, block_data)
data_block_length <- c(data_block_length, block_length)
}

save(file="Genetic_Datasets/Batch3_KEPE/PE_DH_Block.Data", list=c("data_block", "data_block_length"))
'#
